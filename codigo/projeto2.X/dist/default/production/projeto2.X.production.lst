

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Dec 02 10:52:12 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220                           
   221                           	psect	idataBANK0
   222  07F8                     __pidataBANK0:
   223                           
   224                           ;initializer for _max_temp
   225  07F8  3428               	retlw	40
   226  07F9  3400               	retlw	0
   227                           
   228                           ;initializer for _hora_stop
   229  07FA  3414               	retlw	20
   230  07FB  3400               	retlw	0
   231                           
   232                           ;initializer for _hora_start
   233  07FC  340C               	retlw	12
   234  07FD  3400               	retlw	0
   235                           
   236                           ;initializer for _hora
   237  07FE  340C               	retlw	12
   238  07FF  3400               	retlw	0
   239                           
   240                           	psect	strings
   241  0701                     __pstrings:
   242  0701                     stringtab:
   243  0701                     __stringtab:
   244  0701                     stringcode:	
   245                           ;	String table - string pointers are 1 byte each
   246                           
   247  0701                     stringdir:
   248  0701  3007               	movlw	high stringdir
   249  0702  008A               	movwf	10
   250  0703  0804               	movf	4,w
   251  0704  0A84               	incf	4,f
   252  0705  0782               	addwf	2,f
   253  0706                     __stringbase:
   254  0706  3400               	retlw	0
   255  0707                     __end_of__stringtab:
   256  0707                     _dpowers:
   257  0707  3401               	retlw	1
   258  0708  3400               	retlw	0
   259  0709  340A               	retlw	10
   260  070A  3400               	retlw	0
   261  070B  3464               	retlw	100
   262  070C  3400               	retlw	0
   263  070D  34E8               	retlw	232
   264  070E  3403               	retlw	3
   265  070F  3410               	retlw	16
   266  0710  3427               	retlw	39
   267  0711                     __end_of_dpowers:
   268  000E                     _TMR1	set	14
   269  0008                     _PORTD	set	8
   270  0007                     _PORTCbits	set	7
   271  001E                     _ADRESH	set	30
   272  000C                     _PIR1bits	set	12
   273  0010                     _T1CONbits	set	16
   274  000B                     _INTCONbits	set	11
   275  001F                     _ADCON0bits	set	31
   276  0006                     _PORTB	set	6
   277  0005                     _PORTAbits	set	5
   278  0032                     _RB2	set	50
   279  0031                     _RB1	set	49
   280  009E                     _ADRESL	set	158
   281  008C                     _PIE1bits	set	140
   282  0081                     _OPTION_REGbits	set	129
   283  009F                     _ADCON1bits	set	159
   284  0088                     _TRISD	set	136
   285  0087                     _TRISC	set	135
   286  0086                     _TRISB	set	134
   287  0085                     _TRISA	set	133
   288  0188                     _ANSELbits	set	392
   289  0188                     _ANSEL	set	392
   290  0189                     _ANSELH	set	393
   291  0711                     STR_4:
   292  0711  3441               	retlw	65	;'A'
   293  0712  343A               	retlw	58	;':'
   294  0713  3444               	retlw	68	;'D'
   295  0714  3445               	retlw	69	;'E'
   296  0715  3453               	retlw	83	;'S'
   297  0716  344C               	retlw	76	;'L'
   298  0717  3449               	retlw	73	;'I'
   299  0718  3447               	retlw	71	;'G'
   300  0719  3441               	retlw	65	;'A'
   301  071A  3444               	retlw	68	;'D'
   302  071B  344F               	retlw	79	;'O'
   303  071C  3420               	retlw	32	;' '
   304  071D  3420               	retlw	32	;' '
   305  071E  3420               	retlw	32	;' '
   306  071F  3420               	retlw	32	;' '
   307  0720  3420               	retlw	32	;' '
   308  0721  3420               	retlw	32	;' '
   309  0722  3420               	retlw	32	;' '
   310  0723  3420               	retlw	32	;' '
   311  0724  3420               	retlw	32	;' '
   312  0725  3420               	retlw	32	;' '
   313  0726  3420               	retlw	32	;' '
   314  0727  3400               	retlw	0
   315  0728                     STR_8:
   316  0728  3420               	retlw	32	;' '
   317  0729  3420               	retlw	32	;' '
   318  072A  3420               	retlw	32	;' '
   319  072B  3420               	retlw	32	;' '
   320  072C  3425               	retlw	37	;'%'
   321  072D  3430               	retlw	48	;'0'
   322  072E  3432               	retlw	50	;'2'
   323  072F  3464               	retlw	100	;'d'
   324  0730  343A               	retlw	58	;':'
   325  0731  3425               	retlw	37	;'%'
   326  0732  3430               	retlw	48	;'0'
   327  0733  3432               	retlw	50	;'2'
   328  0734  3464               	retlw	100	;'d'
   329  0735  343A               	retlw	58	;':'
   330  0736  3425               	retlw	37	;'%'
   331  0737  3430               	retlw	48	;'0'
   332  0738  3432               	retlw	50	;'2'
   333  0739  3464               	retlw	100	;'d'
   334  073A  3420               	retlw	32	;' '
   335  073B  3420               	retlw	32	;' '
   336  073C  3420               	retlw	32	;' '
   337  073D  3420               	retlw	32	;' '
   338  073E  3400               	retlw	0
   339  073F                     STR_3:
   340  073F  3441               	retlw	65	;'A'
   341  0740  343A               	retlw	58	;':'
   342  0741  344C               	retlw	76	;'L'
   343  0742  3449               	retlw	73	;'I'
   344  0743  3447               	retlw	71	;'G'
   345  0744  3441               	retlw	65	;'A'
   346  0745  3444               	retlw	68	;'D'
   347  0746  344F               	retlw	79	;'O'
   348  0747  3420               	retlw	32	;' '
   349  0748  3420               	retlw	32	;' '
   350  0749  3420               	retlw	32	;' '
   351  074A  3420               	retlw	32	;' '
   352  074B  3420               	retlw	32	;' '
   353  074C  3420               	retlw	32	;' '
   354  074D  3420               	retlw	32	;' '
   355  074E  3420               	retlw	32	;' '
   356  074F  3420               	retlw	32	;' '
   357  0750  3420               	retlw	32	;' '
   358  0751  3420               	retlw	32	;' '
   359  0752  3420               	retlw	32	;' '
   360  0753  3400               	retlw	0
   361  0754                     STR_6:
   362  0754  3420               	retlw	32	;' '
   363  0755  3420               	retlw	32	;' '
   364  0756  3420               	retlw	32	;' '
   365  0757  3420               	retlw	32	;' '
   366  0758  3420               	retlw	32	;' '
   367  0759  3420               	retlw	32	;' '
   368  075A  3425               	retlw	37	;'%'
   369  075B  3464               	retlw	100	;'d'
   370  075C  3425               	retlw	37	;'%'
   371  075D  3463               	retlw	99	;'c'
   372  075E  3443               	retlw	67	;'C'
   373  075F  3420               	retlw	32	;' '
   374  0760  3420               	retlw	32	;' '
   375  0761  3420               	retlw	32	;' '
   376  0762  3420               	retlw	32	;' '
   377  0763  3420               	retlw	32	;' '
   378  0764  3420               	retlw	32	;' '
   379  0765  3420               	retlw	32	;' '
   380  0766  3400               	retlw	0
   381  0767                     STR_10:
   382  0767  3420               	retlw	32	;' '
   383  0768  3420               	retlw	32	;' '
   384  0769  3420               	retlw	32	;' '
   385  076A  3420               	retlw	32	;' '
   386  076B  3420               	retlw	32	;' '
   387  076C  3425               	retlw	37	;'%'
   388  076D  3430               	retlw	48	;'0'
   389  076E  3432               	retlw	50	;'2'
   390  076F  3464               	retlw	100	;'d'
   391  0770  343A               	retlw	58	;':'
   392  0771  3425               	retlw	37	;'%'
   393  0772  3430               	retlw	48	;'0'
   394  0773  3432               	retlw	50	;'2'
   395  0774  3464               	retlw	100	;'d'
   396  0775  3420               	retlw	32	;' '
   397  0776  3420               	retlw	32	;' '
   398  0777  3420               	retlw	32	;' '
   399  0778  3420               	retlw	32	;' '
   400  0779  3400               	retlw	0
   401  077A                     STR_7:
   402  077A  3420               	retlw	32	;' '
   403  077B  3420               	retlw	32	;' '
   404  077C  3420               	retlw	32	;' '
   405  077D  3420               	retlw	32	;' '
   406  077E  3420               	retlw	32	;' '
   407  077F  3452               	retlw	82	;'R'
   408  0780  3445               	retlw	69	;'E'
   409  0781  344C               	retlw	76	;'L'
   410  0782  344F               	retlw	79	;'O'
   411  0783  3447               	retlw	71	;'G'
   412  0784  3449               	retlw	73	;'I'
   413  0785  344F               	retlw	79	;'O'
   414  0786  3420               	retlw	32	;' '
   415  0787  3420               	retlw	32	;' '
   416  0788  3420               	retlw	32	;' '
   417  0789  3420               	retlw	32	;' '
   418  078A  3420               	retlw	32	;' '
   419  078B  3400               	retlw	0
   420  078C                     STR_5:
   421  078C  3420               	retlw	32	;' '
   422  078D  3420               	retlw	32	;' '
   423  078E  3420               	retlw	32	;' '
   424  078F  3454               	retlw	84	;'T'
   425  0790  3445               	retlw	69	;'E'
   426  0791  344D               	retlw	77	;'M'
   427  0792  3450               	retlw	80	;'P'
   428  0793  3445               	retlw	69	;'E'
   429  0794  3452               	retlw	82	;'R'
   430  0795  3441               	retlw	65	;'A'
   431  0796  3454               	retlw	84	;'T'
   432  0797  3455               	retlw	85	;'U'
   433  0798  3452               	retlw	82	;'R'
   434  0799  3441               	retlw	65	;'A'
   435  079A  3420               	retlw	32	;' '
   436  079B  3420               	retlw	32	;' '
   437  079C  3420               	retlw	32	;' '
   438  079D  3400               	retlw	0
   439  079E                     STR_2:
   440  079E  3454               	retlw	84	;'T'
   441  079F  343A               	retlw	58	;':'
   442  07A0  3425               	retlw	37	;'%'
   443  07A1  3464               	retlw	100	;'d'
   444  07A2  3425               	retlw	37	;'%'
   445  07A3  3463               	retlw	99	;'c'
   446  07A4  3443               	retlw	67	;'C'
   447  07A5  3420               	retlw	32	;' '
   448  07A6  3420               	retlw	32	;' '
   449  07A7  344E               	retlw	78	;'N'
   450  07A8  343A               	retlw	58	;':'
   451  07A9  3441               	retlw	65	;'A'
   452  07AA  344C               	retlw	76	;'L'
   453  07AB  3454               	retlw	84	;'T'
   454  07AC  344F               	retlw	79	;'O'
   455  07AD  3420               	retlw	32	;' '
   456  07AE  3420               	retlw	32	;' '
   457  07AF  3400               	retlw	0
   458  07B0                     STR_1:
   459  07B0  3454               	retlw	84	;'T'
   460  07B1  343A               	retlw	58	;':'
   461  07B2  3425               	retlw	37	;'%'
   462  07B3  3464               	retlw	100	;'d'
   463  07B4  3425               	retlw	37	;'%'
   464  07B5  3463               	retlw	99	;'c'
   465  07B6  3443               	retlw	67	;'C'
   466  07B7  3420               	retlw	32	;' '
   467  07B8  3420               	retlw	32	;' '
   468  07B9  344E               	retlw	78	;'N'
   469  07BA  343A               	retlw	58	;':'
   470  07BB  3442               	retlw	66	;'B'
   471  07BC  3441               	retlw	65	;'A'
   472  07BD  3449               	retlw	73	;'I'
   473  07BE  3458               	retlw	88	;'X'
   474  07BF  344F               	retlw	79	;'O'
   475  07C0  3420               	retlw	32	;' '
   476  07C1  3400               	retlw	0
   477  07C2                     STR_11:
   478  07C2  3420               	retlw	32	;' '
   479  07C3  3448               	retlw	72	;'H'
   480  07C4  344F               	retlw	79	;'O'
   481  07C5  3452               	retlw	82	;'R'
   482  07C6  3441               	retlw	65	;'A'
   483  07C7  3420               	retlw	32	;' '
   484  07C8  3444               	retlw	68	;'D'
   485  07C9  3445               	retlw	69	;'E'
   486  07CA  3420               	retlw	32	;' '
   487  07CB  3450               	retlw	80	;'P'
   488  07CC  3441               	retlw	65	;'A'
   489  07CD  3452               	retlw	82	;'R'
   490  07CE  3441               	retlw	65	;'A'
   491  07CF  3444               	retlw	68	;'D'
   492  07D0  3441               	retlw	65	;'A'
   493  07D1  3420               	retlw	32	;' '
   494  07D2  3400               	retlw	0
   495  07D3                     STR_9:
   496  07D3  3420               	retlw	32	;' '
   497  07D4  3448               	retlw	72	;'H'
   498  07D5  344F               	retlw	79	;'O'
   499  07D6  3452               	retlw	82	;'R'
   500  07D7  3441               	retlw	65	;'A'
   501  07D8  3420               	retlw	32	;' '
   502  07D9  3444               	retlw	68	;'D'
   503  07DA  3445               	retlw	69	;'E'
   504  07DB  3420               	retlw	32	;' '
   505  07DC  3449               	retlw	73	;'I'
   506  07DD  344E               	retlw	78	;'N'
   507  07DE  3449               	retlw	73	;'I'
   508  07DF  3443               	retlw	67	;'C'
   509  07E0  3449               	retlw	73	;'I'
   510  07E1  344F               	retlw	79	;'O'
   511  07E2  3420               	retlw	32	;' '
   512  07E3  3400               	retlw	0
   513  0767                     
   514                           	psect	cinit
   515  000F                     start_initialization:	
   516                           ; #config settings
   517                           
   518  000F                     __initialization:
   519                           
   520                           ; Initialize objects allocated to BANK0
   521  000F  1383               	bcf	3,7	;select IRP bank0
   522  0010  3062               	movlw	low (__pdataBANK0+8)
   523  0011  00FD               	movwf	btemp+-1
   524  0012  3007               	movlw	high __pidataBANK0
   525  0013  00FE               	movwf	btemp
   526  0014  30F8               	movlw	low __pidataBANK0
   527  0015  00FF               	movwf	btemp+1
   528  0016  305A               	movlw	low __pdataBANK0
   529  0017  0084               	movwf	4
   530  0018  120A  158A  26B2  120A  118A  	fcall	init_ram0
   531                           
   532                           ; Clear objects allocated to BANK0
   533  001D  3046               	movlw	low __pbssBANK0
   534  001E  0084               	movwf	4
   535  001F  305A               	movlw	low (__pbssBANK0+20)
   536  0020  120A  158A  2678  120A  118A  	fcall	clear_ram0
   537                           
   538                           ; Clear objects allocated to COMMON
   539  0025  01FC               	clrf	__pbssCOMMON& (0+127)
   540  0026  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   541  0027                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  0027                     __end_of__initialization:
   545  0027  0183               	clrf	3
   546  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMMON
   549  007C                     __pbssCOMMON:
   550  007C                     _cont:
   551  007C                     	ds	2
   552                           
   553                           	psect	bssBANK0
   554  0046                     __pbssBANK0:
   555  0046                     _ajustar:
   556  0046                     	ds	2
   557  0048                     _nivel:
   558  0048                     	ds	2
   559  004A                     _aquecedor:
   560  004A                     	ds	2
   561  004C                     _check_time:
   562  004C                     	ds	2
   563  004E                     _flag:
   564  004E                     	ds	2
   565  0050                     _temp:
   566  0050                     	ds	2
   567  0052                     _min_stop:
   568  0052                     	ds	2
   569  0054                     _min_start:
   570  0054                     	ds	2
   571  0056                     _min:
   572  0056                     	ds	2
   573  0058                     _seg:
   574  0058                     	ds	2
   575                           
   576                           	psect	dataBANK0
   577  005A                     __pdataBANK0:
   578  005A                     _max_temp:
   579  005A                     	ds	2
   580  005C                     _hora_stop:
   581  005C                     	ds	2
   582  005E                     _hora_start:
   583  005E                     	ds	2
   584  0060                     _hora:
   585  0060                     	ds	2
   586                           
   587                           	psect	inittext
   588  0EAE                     init_fetch0:	
   589                           ;	Called with low address in FSR and high address in W
   590                           
   591  0EAE  087E               	movf	btemp,w
   592  0EAF  008A               	movwf	10
   593  0EB0  087F               	movf	btemp+1,w
   594  0EB1  0082               	movwf	2
   595  0EB2                     init_ram0:	
   596                           ;Called with:
   597                           ;	high address of idata address in btemp 
   598                           ;	low address of idata address in btemp+1 
   599                           ;	low address of data in FSR
   600                           ;	high address + 1 of data in btemp-1
   601                           
   602  0EB2  120A  158A  26AE  120A  158A  	fcall	init_fetch0
   603  0EB7  0080               	movwf	0
   604  0EB8  0A84               	incf	4,f
   605  0EB9  0804               	movf	4,w
   606  0EBA  067D               	xorwf	btemp+-1,w
   607  0EBB  1903               	btfsc	3,2
   608  0EBC  3400               	retlw	0
   609  0EBD  0AFF               	incf	btemp+1,f
   610  0EBE  1903               	btfsc	3,2
   611  0EBF  0AFE               	incf	btemp,f
   612  0EC0  2EB2               	goto	init_ram0
   613                           
   614                           	psect	clrtext
   615  0E78                     clear_ram0:	
   616                           ;	Called with FSR containing the base address, and
   617                           ;	W with the last address+1
   618                           
   619  0E78  0064               	clrwdt	;clear the watchdog before getting into this loop
   620  0E79                     clrloop0:
   621  0E79  0180               	clrf	0	;clear RAM location pointed to by FSR
   622  0E7A  0A84               	incf	4,f	;increment pointer
   623  0E7B  0604               	xorwf	4,w	;XOR with final address
   624  0E7C  1903               	btfsc	3,2	;have we reached the end yet?
   625  0E7D  3400               	retlw	0	;all done for this memory range, return
   626  0E7E  0604               	xorwf	4,w	;XOR again to restore value
   627  0E7F  2E79               	goto	clrloop0	;do the next byte
   628                           
   629                           	psect	cstackCOMMON
   630  0070                     __pcstackCOMMON:
   631  0070                     ?_isdigit:
   632  0070                     ?_inicia_lcd:	
   633                           ; 1 bit 
   634                           
   635  0070                     ?_envia_lcd_comando:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_main:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_Interrupt:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_envia_lcd_dado:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_putch:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?i1___wmul:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     i1___wmul@multiplier:	
   654                           ; 2 bytes @ 0x0
   655                           
   656                           
   657                           ; 2 bytes @ 0x0
   658  0070                     	ds	2
   659  0072                     i1___wmul@multiplicand:
   660                           
   661                           ; 2 bytes @ 0x2
   662  0072                     	ds	2
   663  0074                     ??i1___wmul:
   664  0074                     i1___wmul@product:	
   665                           ; 1 bytes @ 0x4
   666                           
   667                           
   668                           ; 2 bytes @ 0x4
   669  0074                     	ds	2
   670  0076                     ??_Interrupt:
   671                           
   672                           ; 1 bytes @ 0x6
   673  0076                     	ds	4
   674  007A                     Interrupt@voltage:
   675                           
   676                           ; 2 bytes @ 0xA
   677  007A                     	ds	2
   678                           
   679                           	psect	cstackBANK0
   680  0020                     __pcstackBANK0:
   681  0020                     ??_envia_lcd_comando:
   682  0020                     ??_isdigit:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0020                     ??_envia_lcd_dado:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0020                     ?___wmul:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0020                     ?___lwdiv:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  0020                     _isdigit$901:	
   695                           ; 2 bytes @ 0x0
   696                           
   697  0020                     ___wmul@multiplier:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0020                     ___lwdiv@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703                           
   704                           ; 2 bytes @ 0x0
   705  0020                     	ds	1
   706  0021                     envia_lcd_comando@RS:
   707  0021                     envia_lcd_dado@valor:	
   708                           ; 1 bytes @ 0x1
   709                           
   710  0021                     isdigit@c:	
   711                           ; 1 bytes @ 0x1
   712                           
   713                           
   714                           ; 1 bytes @ 0x1
   715  0021                     	ds	1
   716  0022                     ??_inicia_lcd:
   717  0022                     ??_putch:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0022                     putch@p:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0022                     ___wmul@multiplicand:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0022                     ___lwdiv@dividend:	
   727                           ; 2 bytes @ 0x2
   728                           
   729                           
   730                           ; 2 bytes @ 0x2
   731  0022                     	ds	2
   732  0024                     ??___wmul:
   733  0024                     ??___lwdiv:	
   734                           ; 1 bytes @ 0x4
   735                           
   736  0024                     ___wmul@product:	
   737                           ; 1 bytes @ 0x4
   738                           
   739                           
   740                           ; 2 bytes @ 0x4
   741  0024                     	ds	1
   742  0025                     ___lwdiv@quotient:
   743                           
   744                           ; 2 bytes @ 0x5
   745  0025                     	ds	2
   746  0027                     ___lwdiv@counter:
   747                           
   748                           ; 1 bytes @ 0x7
   749  0027                     	ds	1
   750  0028                     ?___lwmod:
   751  0028                     ___lwmod@divisor:	
   752                           ; 2 bytes @ 0x8
   753                           
   754                           
   755                           ; 2 bytes @ 0x8
   756  0028                     	ds	2
   757  002A                     ___lwmod@dividend:
   758                           
   759                           ; 2 bytes @ 0xA
   760  002A                     	ds	2
   761  002C                     ??___lwmod:
   762                           
   763                           ; 1 bytes @ 0xC
   764  002C                     	ds	1
   765  002D                     ___lwmod@counter:
   766                           
   767                           ; 1 bytes @ 0xD
   768  002D                     	ds	1
   769  002E                     ?_printf:
   770                           
   771                           ; 2 bytes @ 0xE
   772  002E                     	ds	6
   773  0034                     ??_printf:
   774                           
   775                           ; 1 bytes @ 0x14
   776  0034                     	ds	3
   777  0037                     printf@cp:
   778                           
   779                           ; 1 bytes @ 0x17
   780  0037                     	ds	1
   781  0038                     printf@prec:
   782                           
   783                           ; 1 bytes @ 0x18
   784  0038                     	ds	1
   785  0039                     printf@ap:
   786                           
   787                           ; 1 bytes @ 0x19
   788  0039                     	ds	1
   789  003A                     printf@len:
   790                           
   791                           ; 2 bytes @ 0x1A
   792  003A                     	ds	2
   793  003C                     printf@val:
   794                           
   795                           ; 2 bytes @ 0x1C
   796  003C                     	ds	2
   797  003E                     printf@flag:
   798                           
   799                           ; 1 bytes @ 0x1E
   800  003E                     	ds	1
   801  003F                     printf@width:
   802                           
   803                           ; 2 bytes @ 0x1F
   804  003F                     	ds	2
   805  0041                     printf@f:
   806                           
   807                           ; 1 bytes @ 0x21
   808  0041                     	ds	1
   809  0042                     printf@c:
   810                           
   811                           ; 1 bytes @ 0x22
   812  0042                     	ds	1
   813  0043                     ??_main:
   814                           
   815                           ; 1 bytes @ 0x23
   816  0043                     	ds	3
   817                           
   818                           	psect	maintext
   819  002B                     __pmaintext:	
   820 ;;
   821 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   822 ;;
   823 ;; *************** function _main *****************
   824 ;; Defined at:
   825 ;;		line 50 in file "main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : B00/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0
   841 ;;      Temps:          0       3       0       0       0
   842 ;;      Totals:         0       3       0       0       0
   843 ;;Total ram usage:        3 bytes
   844 ;; Hardware stack levels required when called:    5
   845 ;; This function calls:
   846 ;;		_envia_lcd_comando
   847 ;;		_inicia_lcd
   848 ;;		_printf
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _main
   856  002B                     _main:
   857  002B                     l1760:	
   858                           ;incstack = 0
   859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   860                           
   861                           
   862                           ;main.c: 52:     T1CONbits.TMR1ON = 1;
   863  002B  3007               	movlw	7
   864  002C  1683               	bsf	3,5	;RP0=1, select bank1
   865  002D  1303               	bcf	3,6	;RP1=0, select bank1
   866  002E  0085               	movwf	5	;volatile
   867                           
   868                           ;main.c: 53:     T1CONbits.TMR1CS = 0;
   869  002F  3003               	movlw	3
   870  0030  0086               	movwf	6	;volatile
   871  0031                     l1762:
   872                           
   873                           ;main.c: 54:     T1CONbits.T1CKPS0 = 1;
   874  0031  0187               	clrf	7	;volatile
   875  0032                     l1764:
   876                           
   877                           ;main.c: 55:     T1CONbits.T1CKPS1 = 1;
   878  0032  0188               	clrf	8	;volatile
   879  0033                     l1766:
   880                           
   881                           ;main.c: 56:     TMR1 = 3036;
   882  0033  1283               	bcf	3,5	;RP0=0, select bank0
   883  0034  1303               	bcf	3,6	;RP1=0, select bank0
   884  0035  1185               	bcf	5,3	;volatile
   885  0036                     l1768:
   886                           
   887                           ;main.c: 57: 
   888  0036  0186               	clrf	6	;volatile
   889  0037                     l1770:
   890                           
   891                           ;main.c: 58:     inicia_lcd();
   892  0037  1683               	bsf	3,5	;RP0=1, select bank3
   893  0038  1703               	bsf	3,6	;RP1=1, select bank3
   894  0039  0189               	clrf	9	;volatile
   895                           
   896                           ;main.c: 59:     envia_lcd_comando(0x80);
   897  003A  3001               	movlw	1
   898  003B  0088               	movwf	8	;volatile
   899  003C                     l1772:
   900                           
   901                           ;main.c: 61:     while (1) {
   902  003C  1408               	bsf	8,0	;volatile
   903  003D                     l1774:
   904                           
   905                           ;main.c: 62:         ADCON0bits.GO = 1;
   906  003D  1283               	bcf	3,5	;RP0=0, select bank0
   907  003E  1303               	bcf	3,6	;RP1=0, select bank0
   908  003F  141F               	bsf	31,0	;volatile
   909  0040                     l1776:
   910                           
   911                           ;main.c: 63:         switch (flag) {
   912  0040  1683               	bsf	3,5	;RP0=1, select bank1
   913  0041  1303               	bcf	3,6	;RP1=0, select bank1
   914  0042  179F               	bsf	31,7	;volatile
   915  0043                     l1778:
   916                           
   917                           ;main.c: 64:             case 0:
   918  0043  1283               	bcf	3,5	;RP0=0, select bank0
   919  0044  1303               	bcf	3,6	;RP1=0, select bank0
   920  0045  111F               	bcf	31,2	;volatile
   921  0046                     l1780:
   922                           
   923                           ;main.c: 65:                 if (nivel == 0){
   924  0046  119F               	bcf	31,3	;volatile
   925  0047                     l1782:
   926                           
   927                           ;main.c: 66:                     envia_lcd_comando(0x80);
   928  0047  121F               	bcf	31,4	;volatile
   929  0048                     l1784:
   930                           
   931                           ;main.c: 67:                     printf("T:%d%cC  N:BAIXO ", temp, 0xDF);
   932  0048  129F               	bcf	31,5	;volatile
   933  0049                     l1786:
   934                           
   935                           ;main.c: 68:                 }else if (nivel == 1){
   936  0049  1683               	bsf	3,5	;RP0=1, select bank1
   937  004A  1303               	bcf	3,6	;RP1=0, select bank1
   938  004B  129F               	bcf	31,5	;volatile
   939  004C                     l1788:
   940                           
   941                           ;main.c: 69:                     envia_lcd_comando(0x80);
   942  004C  121F               	bcf	31,4	;volatile
   943  004D                     l1790:
   944                           
   945                           ;main.c: 70:                     printf("T:%d%cC  N:ALTO  ", temp, 0xDF);
   946  004D  1283               	bcf	3,5	;RP0=0, select bank0
   947  004E  1303               	bcf	3,6	;RP1=0, select bank0
   948  004F  171F               	bsf	31,6	;volatile
   949  0050                     l1792:
   950                           
   951                           ;main.c: 71:                 }
   952  0050  179F               	bsf	31,7	;volatile
   953  0051                     l1794:
   954                           
   955                           ;main.c: 73:                     envia_lcd_comando(0xc0);
   956  0051  1683               	bsf	3,5	;RP0=1, select bank1
   957  0052  1303               	bcf	3,6	;RP1=0, select bank1
   958  0053  1301               	bcf	1,6	;volatile
   959  0054                     l1796:
   960                           
   961                           ;main.c: 74:                     printf("A:LIGADO            ");
   962  0054  160B               	bsf	11,4	;volatile
   963  0055                     l1798:
   964                           
   965                           ;main.c: 75:                 }else if (check_time == 0){
   966  0055  178B               	bsf	11,7	;volatile
   967  0056                     l1800:
   968                           
   969                           ;main.c: 76:                     envia_lcd_comando(0xc0);
   970  0056  170B               	bsf	11,6	;volatile
   971  0057                     l1802:
   972                           
   973                           ;main.c: 77:                     printf("A:DESLIGADO           ");
   974  0057  140C               	bsf	12,0	;volatile
   975  0058                     l1804:
   976                           
   977                           ;main.c: 78:                 }
   978  0058  1283               	bcf	3,5	;RP0=0, select bank0
   979  0059  1303               	bcf	3,6	;RP1=0, select bank0
   980  005A  1410               	bsf	16,0	;volatile
   981  005B                     l1806:
   982                           
   983                           ;main.c: 79:                 if (RB1 == 1){
   984  005B  1090               	bcf	16,1	;volatile
   985  005C                     l1808:
   986                           
   987                           ;main.c: 80:                     flag++;
   988  005C  1610               	bsf	16,4	;volatile
   989  005D                     l1810:
   990                           
   991                           ;main.c: 81:                     _delay((unsigned long)((250)*(4000000/4000.0)));
   992  005D  1690               	bsf	16,5	;volatile
   993  005E                     l1812:
   994                           
   995                           ;main.c: 82:                 }
   996  005E  300B               	movlw	11
   997  005F  008F               	movwf	15	;volatile
   998  0060  30DC               	movlw	220
   999  0061  008E               	movwf	14	;volatile
  1000  0062                     l1814:
  1001                           
  1002                           ;main.c: 84:             case 1:
  1003  0062  120A  158A  278F  120A  118A  	fcall	_inicia_lcd
  1004  0067                     l1816:
  1005                           
  1006                           ;main.c: 85:                 envia_lcd_comando(0x80);
  1007  0067  3080               	movlw	128
  1008  0068  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1009  006D                     l1818:
  1010                           
  1011                           ;main.c: 88:                 printf("      %d%cC       ",max_temp, 0xDF);
  1012  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1013  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1014  006F  149F               	bsf	31,1	;volatile
  1015                           
  1016                           ;main.c: 89:                 if (RB2 == 1 && ajustar == 0){
  1017  0070  2BDB               	goto	l2018
  1018  0071                     l1820:
  1019                           
  1020                           ;main.c: 91:                     ajustar = 1;
  1021  0071  0848               	movf	_nivel,w
  1022  0072  0449               	iorwf	_nivel+1,w
  1023  0073  1D03               	btfss	3,2
  1024  0074  2876               	goto	u1611
  1025  0075  2877               	goto	u1610
  1026  0076                     u1611:
  1027  0076  288E               	goto	l1826
  1028  0077                     u1610:
  1029  0077                     l1822:
  1030                           
  1031                           ;main.c: 92:                 }else if (RB2 == 1 && ajustar == 1){
  1032  0077  3080               	movlw	128
  1033  0078  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1034  007D                     l1824:
  1035                           
  1036                           ;main.c: 93:                     ajustar = 0;
  1037  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1038  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1039  007F  0851               	movf	_temp+1,w
  1040  0080  00AF               	movwf	?_printf+1
  1041  0081  0850               	movf	_temp,w
  1042  0082  00AE               	movwf	?_printf
  1043  0083  30DF               	movlw	223
  1044  0084  00B0               	movwf	?_printf+2
  1045  0085  3000               	movlw	0
  1046  0086  00B1               	movwf	?_printf+3
  1047  0087  30AA               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1048  0088  120A  118A  23F4  120A  118A  	fcall	_printf
  1049                           
  1050                           ;main.c: 94:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1051  008D  28AA               	goto	l1832
  1052  008E                     l1826:
  1053  008E  0348               	decf	_nivel,w
  1054  008F  0449               	iorwf	_nivel+1,w
  1055  0090  1D03               	btfss	3,2
  1056  0091  2893               	goto	u1621
  1057  0092  2894               	goto	u1620
  1058  0093                     u1621:
  1059  0093  28AA               	goto	l1832
  1060  0094                     u1620:
  1061  0094                     l1828:
  1062                           
  1063                           ;main.c: 95:                 }
  1064  0094  3080               	movlw	128
  1065  0095  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1066  009A                     l1830:
  1067                           
  1068                           ;main.c: 96:                 if (RB1 == 1 && ajustar == 0){
  1069  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1070  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1071  009C  0851               	movf	_temp+1,w
  1072  009D  00AF               	movwf	?_printf+1
  1073  009E  0850               	movf	_temp,w
  1074  009F  00AE               	movwf	?_printf
  1075  00A0  30DF               	movlw	223
  1076  00A1  00B0               	movwf	?_printf+2
  1077  00A2  3000               	movlw	0
  1078  00A3  00B1               	movwf	?_printf+3
  1079  00A4  3098               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1080  00A5  120A  118A  23F4  120A  118A  	fcall	_printf
  1081  00AA                     l1832:
  1082                           
  1083                           ;main.c: 98:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  1084  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1085  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1086  00AC  034C               	decf	_check_time,w
  1087  00AD  044D               	iorwf	_check_time+1,w
  1088  00AE  1D03               	btfss	3,2
  1089  00AF  28B1               	goto	u1631
  1090  00B0  28B2               	goto	u1630
  1091  00B1                     u1631:
  1092  00B1  28BF               	goto	l1838
  1093  00B2                     u1630:
  1094  00B2                     l1834:
  1095                           
  1096                           ;main.c: 99:                 }else if (RB1 == 1 && ajustar == 1){
  1097  00B2  30C0               	movlw	192
  1098  00B3  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1099  00B8                     l1836:
  1100                           
  1101                           ;main.c: 100:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  1102  00B8  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1103  00B9  120A  118A  23F4  120A  118A  	fcall	_printf
  1104                           
  1105                           ;main.c: 101:                     max_temp = max_temp +5;
  1106  00BE  28D1               	goto	l1844
  1107  00BF                     l1838:
  1108  00BF  084C               	movf	_check_time,w
  1109  00C0  044D               	iorwf	_check_time+1,w
  1110  00C1  1D03               	btfss	3,2
  1111  00C2  28C4               	goto	u1641
  1112  00C3  28C5               	goto	u1640
  1113  00C4                     u1641:
  1114  00C4  28D1               	goto	l1844
  1115  00C5                     u1640:
  1116  00C5                     l1840:
  1117                           
  1118                           ;main.c: 102:                     if(max_temp == 105){
  1119  00C5  30C0               	movlw	192
  1120  00C6  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1121  00CB                     l1842:
  1122                           
  1123                           ;main.c: 103:                         max_temp = 10;
  1124  00CB  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1125  00CC  120A  118A  23F4  120A  118A  	fcall	_printf
  1126  00D1                     l1844:
  1127                           
  1128                           ;main.c: 105:                 }
  1129  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1130  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1131  00D3  1C86               	btfss	6,1	;volatile
  1132  00D4  28D6               	goto	u1651
  1133  00D5  28D7               	goto	u1650
  1134  00D6                     u1651:
  1135  00D6  286D               	goto	l1818
  1136  00D7                     u1650:
  1137  00D7                     l1846:
  1138                           
  1139                           ;main.c: 106:                 break;
  1140  00D7  3001               	movlw	1
  1141  00D8  07CE               	addwf	_flag,f
  1142  00D9  1803               	skipnc
  1143  00DA  0ACF               	incf	_flag+1,f
  1144  00DB  3000               	movlw	0
  1145  00DC  07CF               	addwf	_flag+1,f
  1146                           
  1147                           ;main.c: 107:             case 2:
  1148  00DD  3002               	movlw	2
  1149  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1150  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1151  00E0  00C5               	movwf	??_main+2
  1152  00E1  3045               	movlw	69
  1153  00E2  00C4               	movwf	??_main+1
  1154  00E3  30A9               	movlw	169
  1155  00E4  00C3               	movwf	??_main
  1156  00E5                     u2317:
  1157  00E5  0BC3               	decfsz	??_main,f
  1158  00E6  28E5               	goto	u2317
  1159  00E7  0BC4               	decfsz	??_main+1,f
  1160  00E8  28E5               	goto	u2317
  1161  00E9  0BC5               	decfsz	??_main+2,f
  1162  00EA  28E5               	goto	u2317
  1163  00EB  286D               	goto	l1818
  1164  00EC                     l1848:
  1165                           
  1166                           ;main.c: 111:                 printf("    %02d:%02d:%02d    ", hora, min, seg);
  1167  00EC  3080               	movlw	128
  1168  00ED  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1169  00F2                     l1850:
  1170                           
  1171                           ;main.c: 112:                 if (RB2 == 1 && ajustar == 0){
  1172  00F2  3086               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1173  00F3  120A  118A  23F4  120A  118A  	fcall	_printf
  1174  00F8                     l1852:
  1175                           
  1176                           ;main.c: 113:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1177  00F8  30C0               	movlw	192
  1178  00F9  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1179                           
  1180                           ;main.c: 114:                     ajustar = 1;
  1181  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0100  085B               	movf	_max_temp+1,w
  1184  0101  00AF               	movwf	?_printf+1
  1185  0102  085A               	movf	_max_temp,w
  1186  0103  00AE               	movwf	?_printf
  1187  0104  30DF               	movlw	223
  1188  0105  00B0               	movwf	?_printf+2
  1189  0106  3000               	movlw	0
  1190  0107  00B1               	movwf	?_printf+3
  1191  0108  304E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1192  0109  120A  118A  23F4  120A  118A  	fcall	_printf
  1193  010E                     l1854:
  1194                           
  1195                           ;main.c: 115:                 }else if (RB2 == 1 && ajustar == 1){
  1196  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1197  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0110  1D06               	btfss	6,2	;volatile
  1199  0111  2913               	goto	u1661
  1200  0112  2914               	goto	u1660
  1201  0113                     u1661:
  1202  0113  292F               	goto	l101
  1203  0114                     u1660:
  1204  0114                     l1856:
  1205  0114  0846               	movf	_ajustar,w
  1206  0115  0447               	iorwf	_ajustar+1,w
  1207  0116  1D03               	btfss	3,2
  1208  0117  2919               	goto	u1671
  1209  0118  291A               	goto	u1670
  1210  0119                     u1671:
  1211  0119  292F               	goto	l101
  1212  011A                     u1670:
  1213  011A                     l1858:
  1214                           
  1215                           ;main.c: 116:                     ajustar = 2;
  1216  011A  3003               	movlw	3
  1217  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1218  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1219  011D  00C5               	movwf	??_main+2
  1220  011E  308A               	movlw	138
  1221  011F  00C4               	movwf	??_main+1
  1222  0120  3055               	movlw	85
  1223  0121  00C3               	movwf	??_main
  1224  0122                     u2327:
  1225  0122  0BC3               	decfsz	??_main,f
  1226  0123  2922               	goto	u2327
  1227  0124  0BC4               	decfsz	??_main+1,f
  1228  0125  2922               	goto	u2327
  1229  0126  0BC5               	decfsz	??_main+2,f
  1230  0127  2922               	goto	u2327
  1231                           
  1232                           ;main.c: 117:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1233  0128  3001               	movlw	1
  1234  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1235  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1236  012B  00C6               	movwf	_ajustar
  1237  012C  3000               	movlw	0
  1238  012D  00C7               	movwf	_ajustar+1
  1239                           
  1240                           ;main.c: 118:                 }else if (RB2 == 1 && ajustar == 2){
  1241  012E  2949               	goto	l1866
  1242  012F                     l101:
  1243  012F  1D06               	btfss	6,2	;volatile
  1244  0130  2932               	goto	u1681
  1245  0131  2933               	goto	u1680
  1246  0132                     u1681:
  1247  0132  2949               	goto	l1866
  1248  0133                     u1680:
  1249  0133                     l1860:
  1250  0133  0346               	decf	_ajustar,w
  1251  0134  0447               	iorwf	_ajustar+1,w
  1252  0135  1D03               	btfss	3,2
  1253  0136  2938               	goto	u1691
  1254  0137  2939               	goto	u1690
  1255  0138                     u1691:
  1256  0138  2949               	goto	l1866
  1257  0139                     u1690:
  1258  0139                     l1862:
  1259                           
  1260                           ;main.c: 119:                     ajustar = 0;
  1261  0139  01C6               	clrf	_ajustar
  1262  013A  01C7               	clrf	_ajustar+1
  1263  013B                     l1864:
  1264                           
  1265                           ;main.c: 120:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1266  013B  3003               	movlw	3
  1267  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1268  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1269  013E  00C5               	movwf	??_main+2
  1270  013F  308A               	movlw	138
  1271  0140  00C4               	movwf	??_main+1
  1272  0141  3055               	movlw	85
  1273  0142  00C3               	movwf	??_main
  1274  0143                     u2337:
  1275  0143  0BC3               	decfsz	??_main,f
  1276  0144  2943               	goto	u2337
  1277  0145  0BC4               	decfsz	??_main+1,f
  1278  0146  2943               	goto	u2337
  1279  0147  0BC5               	decfsz	??_main+2,f
  1280  0148  2943               	goto	u2337
  1281  0149                     l1866:
  1282                           
  1283                           ;main.c: 122:                 if (RB1 == 1 && ajustar == 0){
  1284  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1285  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1286  014B  1C86               	btfss	6,1	;volatile
  1287  014C  294E               	goto	u1701
  1288  014D  294F               	goto	u1700
  1289  014E                     u1701:
  1290  014E  2956               	goto	l104
  1291  014F                     u1700:
  1292  014F                     l1868:
  1293  014F  0846               	movf	_ajustar,w
  1294  0150  0447               	iorwf	_ajustar+1,w
  1295  0151  1D03               	btfss	3,2
  1296  0152  2954               	goto	u1711
  1297  0153  2955               	goto	u1710
  1298  0154                     u1711:
  1299  0154  2956               	goto	l104
  1300  0155                     u1710:
  1301  0155  28D7               	goto	l1846
  1302  0156                     l104:
  1303  0156  1C86               	btfss	6,1	;volatile
  1304  0157  2959               	goto	u1721
  1305  0158  295A               	goto	u1720
  1306  0159                     u1721:
  1307  0159  286D               	goto	l1818
  1308  015A                     u1720:
  1309  015A                     l1872:
  1310  015A  0346               	decf	_ajustar,w
  1311  015B  0447               	iorwf	_ajustar+1,w
  1312  015C  1D03               	btfss	3,2
  1313  015D  295F               	goto	u1731
  1314  015E  2960               	goto	u1730
  1315  015F                     u1731:
  1316  015F  286D               	goto	l1818
  1317  0160                     u1730:
  1318  0160                     l1874:
  1319                           
  1320                           ;main.c: 126:                     min++;
  1321  0160  3002               	movlw	2
  1322  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0163  00C5               	movwf	??_main+2
  1325  0164  3045               	movlw	69
  1326  0165  00C4               	movwf	??_main+1
  1327  0166  30A9               	movlw	169
  1328  0167  00C3               	movwf	??_main
  1329  0168                     u2347:
  1330  0168  0BC3               	decfsz	??_main,f
  1331  0169  2968               	goto	u2347
  1332  016A  0BC4               	decfsz	??_main+1,f
  1333  016B  2968               	goto	u2347
  1334  016C  0BC5               	decfsz	??_main+2,f
  1335  016D  2968               	goto	u2347
  1336  016E                     l1876:
  1337                           
  1338                           ;main.c: 127:                     if (min >= 60){
  1339  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1340  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0170  085A               	movf	_max_temp,w
  1342  0171  3E05               	addlw	5
  1343  0172  00DA               	movwf	_max_temp
  1344  0173  085B               	movf	_max_temp+1,w
  1345  0174  1803               	skipnc
  1346  0175  3E01               	addlw	1
  1347  0176  3E00               	addlw	0
  1348  0177  00DB               	movwf	_max_temp+1
  1349  0178                     l1878:
  1350                           
  1351                           ;main.c: 128:                         min = 0;
  1352  0178  3069               	movlw	105
  1353  0179  065A               	xorwf	_max_temp,w
  1354  017A  045B               	iorwf	_max_temp+1,w
  1355  017B  1D03               	btfss	3,2
  1356  017C  297E               	goto	u1741
  1357  017D  297F               	goto	u1740
  1358  017E                     u1741:
  1359  017E  286D               	goto	l1818
  1360  017F                     u1740:
  1361  017F                     l1880:
  1362                           
  1363                           ;main.c: 129:                     }
  1364  017F  300A               	movlw	10
  1365  0180  00DA               	movwf	_max_temp
  1366  0181  3000               	movlw	0
  1367  0182  00DB               	movwf	_max_temp+1
  1368  0183  286D               	goto	l1818
  1369  0184                     l1882:
  1370                           
  1371                           ;main.c: 134:                         hora = 0;
  1372  0184  3080               	movlw	128
  1373  0185  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1374  018A                     l1884:
  1375                           
  1376                           ;main.c: 135:                     }
  1377  018A  3074               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1378  018B  120A  118A  23F4  120A  118A  	fcall	_printf
  1379  0190                     l1886:
  1380                           
  1381                           ;main.c: 136:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  1382  0190  30C0               	movlw	192
  1383  0191  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1384                           
  1385                           ;main.c: 137:                 }
  1386  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0198  0861               	movf	_hora+1,w
  1389  0199  00AF               	movwf	?_printf+1
  1390  019A  0860               	movf	_hora,w
  1391  019B  00AE               	movwf	?_printf
  1392  019C  0857               	movf	_min+1,w
  1393  019D  00B1               	movwf	?_printf+3
  1394  019E  0856               	movf	_min,w
  1395  019F  00B0               	movwf	?_printf+2
  1396  01A0  0859               	movf	_seg+1,w
  1397  01A1  00B3               	movwf	?_printf+5
  1398  01A2  0858               	movf	_seg,w
  1399  01A3  00B2               	movwf	?_printf+4
  1400  01A4  3022               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1401  01A5  120A  118A  23F4  120A  118A  	fcall	_printf
  1402  01AA                     l1888:
  1403                           
  1404                           ;main.c: 138:                 break;
  1405  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1406  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1407  01AC  1D06               	btfss	6,2	;volatile
  1408  01AD  29AF               	goto	u1751
  1409  01AE  29B0               	goto	u1750
  1410  01AF                     u1751:
  1411  01AF  29CB               	goto	l109
  1412  01B0                     u1750:
  1413  01B0                     l1890:
  1414  01B0  0846               	movf	_ajustar,w
  1415  01B1  0447               	iorwf	_ajustar+1,w
  1416  01B2  1D03               	btfss	3,2
  1417  01B3  29B5               	goto	u1761
  1418  01B4  29B6               	goto	u1760
  1419  01B5                     u1761:
  1420  01B5  29CB               	goto	l109
  1421  01B6                     u1760:
  1422  01B6                     l1892:
  1423                           
  1424                           ;main.c: 139:             case 3:
  1425  01B6  3003               	movlw	3
  1426  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1427  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1428  01B9  00C5               	movwf	??_main+2
  1429  01BA  308A               	movlw	138
  1430  01BB  00C4               	movwf	??_main+1
  1431  01BC  3055               	movlw	85
  1432  01BD  00C3               	movwf	??_main
  1433  01BE                     u2357:
  1434  01BE  0BC3               	decfsz	??_main,f
  1435  01BF  29BE               	goto	u2357
  1436  01C0  0BC4               	decfsz	??_main+1,f
  1437  01C1  29BE               	goto	u2357
  1438  01C2  0BC5               	decfsz	??_main+2,f
  1439  01C3  29BE               	goto	u2357
  1440                           
  1441                           ;main.c: 140:                 envia_lcd_comando(0x80);
  1442  01C4  3001               	movlw	1
  1443  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1444  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1445  01C7  00C6               	movwf	_ajustar
  1446  01C8  3000               	movlw	0
  1447  01C9  00C7               	movwf	_ajustar+1
  1448                           
  1449                           ;main.c: 141:                 printf(" HORA DE INICIO ");
  1450  01CA  2A03               	goto	l1904
  1451  01CB                     l109:
  1452  01CB  1D06               	btfss	6,2	;volatile
  1453  01CC  29CE               	goto	u1771
  1454  01CD  29CF               	goto	u1770
  1455  01CE                     u1771:
  1456  01CE  29E8               	goto	l111
  1457  01CF                     u1770:
  1458  01CF                     l1894:
  1459  01CF  0346               	decf	_ajustar,w
  1460  01D0  0447               	iorwf	_ajustar+1,w
  1461  01D1  1D03               	btfss	3,2
  1462  01D2  29D4               	goto	u1781
  1463  01D3  29D5               	goto	u1780
  1464  01D4                     u1781:
  1465  01D4  29E8               	goto	l111
  1466  01D5                     u1780:
  1467  01D5                     l1896:
  1468                           
  1469                           ;main.c: 142:                 envia_lcd_comando(0xc0);
  1470  01D5  3002               	movlw	2
  1471  01D6  00C6               	movwf	_ajustar
  1472  01D7  3000               	movlw	0
  1473  01D8  00C7               	movwf	_ajustar+1
  1474                           
  1475                           ;main.c: 143:                 printf("     %02d:%02d    ", hora_start, min_start);
  1476  01D9  3003               	movlw	3
  1477  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1478  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1479  01DC  00C5               	movwf	??_main+2
  1480  01DD  308A               	movlw	138
  1481  01DE  00C4               	movwf	??_main+1
  1482  01DF  3055               	movlw	85
  1483  01E0  00C3               	movwf	??_main
  1484  01E1                     u2367:
  1485  01E1  0BC3               	decfsz	??_main,f
  1486  01E2  29E1               	goto	u2367
  1487  01E3  0BC4               	decfsz	??_main+1,f
  1488  01E4  29E1               	goto	u2367
  1489  01E5  0BC5               	decfsz	??_main+2,f
  1490  01E6  29E1               	goto	u2367
  1491                           
  1492                           ;main.c: 144:                 if (RB2 == 1 && ajustar == 0){
  1493  01E7  2A03               	goto	l1904
  1494  01E8                     l111:
  1495  01E8  1D06               	btfss	6,2	;volatile
  1496  01E9  29EB               	goto	u1791
  1497  01EA  29EC               	goto	u1790
  1498  01EB                     u1791:
  1499  01EB  2A03               	goto	l1904
  1500  01EC                     u1790:
  1501  01EC                     l1898:
  1502  01EC  3002               	movlw	2
  1503  01ED  0646               	xorwf	_ajustar,w
  1504  01EE  0447               	iorwf	_ajustar+1,w
  1505  01EF  1D03               	btfss	3,2
  1506  01F0  29F2               	goto	u1801
  1507  01F1  29F3               	goto	u1800
  1508  01F2                     u1801:
  1509  01F2  2A03               	goto	l1904
  1510  01F3                     u1800:
  1511  01F3                     l1900:
  1512                           
  1513                           ;main.c: 145:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1514  01F3  01C6               	clrf	_ajustar
  1515  01F4  01C7               	clrf	_ajustar+1
  1516  01F5                     l1902:
  1517                           
  1518                           ;main.c: 146:                     ajustar = 1;
  1519  01F5  3003               	movlw	3
  1520  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1521  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1522  01F8  00C5               	movwf	??_main+2
  1523  01F9  308A               	movlw	138
  1524  01FA  00C4               	movwf	??_main+1
  1525  01FB  3055               	movlw	85
  1526  01FC  00C3               	movwf	??_main
  1527  01FD                     u2377:
  1528  01FD  0BC3               	decfsz	??_main,f
  1529  01FE  29FD               	goto	u2377
  1530  01FF  0BC4               	decfsz	??_main+1,f
  1531  0200  29FD               	goto	u2377
  1532  0201  0BC5               	decfsz	??_main+2,f
  1533  0202  29FD               	goto	u2377
  1534  0203                     l1904:
  1535                           
  1536                           ;main.c: 148:                     ajustar = 2;
  1537  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0205  1C86               	btfss	6,1	;volatile
  1540  0206  2A08               	goto	u1811
  1541  0207  2A09               	goto	u1810
  1542  0208                     u1811:
  1543  0208  2A10               	goto	l114
  1544  0209                     u1810:
  1545  0209                     l1906:
  1546  0209  0846               	movf	_ajustar,w
  1547  020A  0447               	iorwf	_ajustar+1,w
  1548  020B  1D03               	btfss	3,2
  1549  020C  2A0E               	goto	u1821
  1550  020D  2A0F               	goto	u1820
  1551  020E                     u1821:
  1552  020E  2A10               	goto	l114
  1553  020F                     u1820:
  1554  020F  28D7               	goto	l1846
  1555  0210                     l114:
  1556  0210  1C86               	btfss	6,1	;volatile
  1557  0211  2A13               	goto	u1831
  1558  0212  2A14               	goto	u1830
  1559  0213                     u1831:
  1560  0213  2A3A               	goto	l116
  1561  0214                     u1830:
  1562  0214                     l1910:
  1563  0214  0346               	decf	_ajustar,w
  1564  0215  0447               	iorwf	_ajustar+1,w
  1565  0216  1D03               	btfss	3,2
  1566  0217  2A19               	goto	u1841
  1567  0218  2A1A               	goto	u1840
  1568  0219                     u1841:
  1569  0219  2A3A               	goto	l116
  1570  021A                     u1840:
  1571  021A                     l1912:
  1572                           
  1573                           ;main.c: 152:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1574  021A  3001               	movlw	1
  1575  021B  07D6               	addwf	_min,f
  1576  021C  1803               	skipnc
  1577  021D  0AD7               	incf	_min+1,f
  1578  021E  3000               	movlw	0
  1579  021F  07D7               	addwf	_min+1,f
  1580                           
  1581                           ;main.c: 153:                 }
  1582  0220  3000               	movlw	0
  1583  0221  0257               	subwf	_min+1,w
  1584  0222  303C               	movlw	60
  1585  0223  1903               	skipnz
  1586  0224  0256               	subwf	_min,w
  1587  0225  1C03               	skipc
  1588  0226  2A28               	goto	u1851
  1589  0227  2A29               	goto	u1850
  1590  0228                     u1851:
  1591  0228  2A2B               	goto	l1916
  1592  0229                     u1850:
  1593  0229                     l1914:
  1594                           
  1595                           ;main.c: 154:                 if (RB1 == 1 && ajustar == 0){
  1596  0229  01D6               	clrf	_min
  1597  022A  01D7               	clrf	_min+1
  1598  022B                     l1916:
  1599                           
  1600                           ;main.c: 156:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  1601  022B  3002               	movlw	2
  1602  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1603  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1604  022E  00C5               	movwf	??_main+2
  1605  022F  3045               	movlw	69
  1606  0230  00C4               	movwf	??_main+1
  1607  0231  30A9               	movlw	169
  1608  0232  00C3               	movwf	??_main
  1609  0233                     u2387:
  1610  0233  0BC3               	decfsz	??_main,f
  1611  0234  2A33               	goto	u2387
  1612  0235  0BC4               	decfsz	??_main+1,f
  1613  0236  2A33               	goto	u2387
  1614  0237  0BC5               	decfsz	??_main+2,f
  1615  0238  2A33               	goto	u2387
  1616                           
  1617                           ;main.c: 157:                 }else if(RB1 == 1 && ajustar == 1){
  1618  0239  286D               	goto	l1818
  1619  023A                     l116:
  1620  023A  1C86               	btfss	6,1	;volatile
  1621  023B  2A3D               	goto	u1861
  1622  023C  2A3E               	goto	u1860
  1623  023D                     u1861:
  1624  023D  286D               	goto	l1818
  1625  023E                     u1860:
  1626  023E                     l1918:
  1627  023E  3002               	movlw	2
  1628  023F  0646               	xorwf	_ajustar,w
  1629  0240  0447               	iorwf	_ajustar+1,w
  1630  0241  1D03               	btfss	3,2
  1631  0242  2A44               	goto	u1871
  1632  0243  2A45               	goto	u1870
  1633  0244                     u1871:
  1634  0244  286D               	goto	l1818
  1635  0245                     u1870:
  1636  0245                     l1920:
  1637                           
  1638                           ;main.c: 158:                     min_start++;
  1639  0245  3001               	movlw	1
  1640  0246  07E0               	addwf	_hora,f
  1641  0247  1803               	skipnc
  1642  0248  0AE1               	incf	_hora+1,f
  1643  0249  3000               	movlw	0
  1644  024A  07E1               	addwf	_hora+1,f
  1645                           
  1646                           ;main.c: 159:                     if(min_start >= 60){
  1647  024B  3000               	movlw	0
  1648  024C  0261               	subwf	_hora+1,w
  1649  024D  3018               	movlw	24
  1650  024E  1903               	skipnz
  1651  024F  0260               	subwf	_hora,w
  1652  0250  1C03               	skipc
  1653  0251  2A53               	goto	u1881
  1654  0252  2A54               	goto	u1880
  1655  0253                     u1881:
  1656  0253  2A2B               	goto	l1916
  1657  0254                     u1880:
  1658  0254                     l1922:
  1659                           
  1660                           ;main.c: 160:                         min_start = 0;
  1661  0254  01E0               	clrf	_hora
  1662  0255  01E1               	clrf	_hora+1
  1663  0256  2A2B               	goto	l1916
  1664  0257                     l1926:
  1665                           
  1666                           ;main.c: 166:                         hora_start = 0;
  1667  0257  3080               	movlw	128
  1668  0258  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1669  025D                     l1928:
  1670                           
  1671                           ;main.c: 167:                     }
  1672  025D  30CD               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1673  025E  120A  118A  23F4  120A  118A  	fcall	_printf
  1674  0263                     l1930:
  1675                           
  1676                           ;main.c: 168:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  1677  0263  30C0               	movlw	192
  1678  0264  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1679                           
  1680                           ;main.c: 169:                 }
  1681  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1682  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1683  026B  085F               	movf	_hora_start+1,w
  1684  026C  00AF               	movwf	?_printf+1
  1685  026D  085E               	movf	_hora_start,w
  1686  026E  00AE               	movwf	?_printf
  1687  026F  0855               	movf	_min_start+1,w
  1688  0270  00B1               	movwf	?_printf+3
  1689  0271  0854               	movf	_min_start,w
  1690  0272  00B0               	movwf	?_printf+2
  1691  0273  3061               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1692  0274  120A  118A  23F4  120A  118A  	fcall	_printf
  1693  0279                     l1932:
  1694                           
  1695                           ;main.c: 170:                 break;
  1696  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1697  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1698  027B  1D06               	btfss	6,2	;volatile
  1699  027C  2A7E               	goto	u1891
  1700  027D  2A7F               	goto	u1890
  1701  027E                     u1891:
  1702  027E  2A9A               	goto	l122
  1703  027F                     u1890:
  1704  027F                     l1934:
  1705  027F  0846               	movf	_ajustar,w
  1706  0280  0447               	iorwf	_ajustar+1,w
  1707  0281  1D03               	btfss	3,2
  1708  0282  2A84               	goto	u1901
  1709  0283  2A85               	goto	u1900
  1710  0284                     u1901:
  1711  0284  2A9A               	goto	l122
  1712  0285                     u1900:
  1713  0285                     l1936:
  1714                           
  1715                           ;main.c: 171:             case 4:
  1716  0285  3003               	movlw	3
  1717  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0288  00C5               	movwf	??_main+2
  1720  0289  308A               	movlw	138
  1721  028A  00C4               	movwf	??_main+1
  1722  028B  3055               	movlw	85
  1723  028C  00C3               	movwf	??_main
  1724  028D                     u2397:
  1725  028D  0BC3               	decfsz	??_main,f
  1726  028E  2A8D               	goto	u2397
  1727  028F  0BC4               	decfsz	??_main+1,f
  1728  0290  2A8D               	goto	u2397
  1729  0291  0BC5               	decfsz	??_main+2,f
  1730  0292  2A8D               	goto	u2397
  1731                           
  1732                           ;main.c: 172:                 envia_lcd_comando(0x80);
  1733  0293  3001               	movlw	1
  1734  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0296  00C6               	movwf	_ajustar
  1737  0297  3000               	movlw	0
  1738  0298  00C7               	movwf	_ajustar+1
  1739                           
  1740                           ;main.c: 173:                 printf(" HORA DE PARADA ");
  1741  0299  2AD2               	goto	l1948
  1742  029A                     l122:
  1743  029A  1D06               	btfss	6,2	;volatile
  1744  029B  2A9D               	goto	u1911
  1745  029C  2A9E               	goto	u1910
  1746  029D                     u1911:
  1747  029D  2AB7               	goto	l124
  1748  029E                     u1910:
  1749  029E                     l1938:
  1750  029E  0346               	decf	_ajustar,w
  1751  029F  0447               	iorwf	_ajustar+1,w
  1752  02A0  1D03               	btfss	3,2
  1753  02A1  2AA3               	goto	u1921
  1754  02A2  2AA4               	goto	u1920
  1755  02A3                     u1921:
  1756  02A3  2AB7               	goto	l124
  1757  02A4                     u1920:
  1758  02A4                     l1940:
  1759                           
  1760                           ;main.c: 174:                 envia_lcd_comando(0xc0);
  1761  02A4  3002               	movlw	2
  1762  02A5  00C6               	movwf	_ajustar
  1763  02A6  3000               	movlw	0
  1764  02A7  00C7               	movwf	_ajustar+1
  1765                           
  1766                           ;main.c: 175:                 printf("     %02d:%02d    ", hora_stop, min_stop);
  1767  02A8  3003               	movlw	3
  1768  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1769  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1770  02AB  00C5               	movwf	??_main+2
  1771  02AC  308A               	movlw	138
  1772  02AD  00C4               	movwf	??_main+1
  1773  02AE  3055               	movlw	85
  1774  02AF  00C3               	movwf	??_main
  1775  02B0                     u2407:
  1776  02B0  0BC3               	decfsz	??_main,f
  1777  02B1  2AB0               	goto	u2407
  1778  02B2  0BC4               	decfsz	??_main+1,f
  1779  02B3  2AB0               	goto	u2407
  1780  02B4  0BC5               	decfsz	??_main+2,f
  1781  02B5  2AB0               	goto	u2407
  1782                           
  1783                           ;main.c: 176:                 if (RB2 == 1 && ajustar == 0){
  1784  02B6  2AD2               	goto	l1948
  1785  02B7                     l124:
  1786  02B7  1D06               	btfss	6,2	;volatile
  1787  02B8  2ABA               	goto	u1931
  1788  02B9  2ABB               	goto	u1930
  1789  02BA                     u1931:
  1790  02BA  2AD2               	goto	l1948
  1791  02BB                     u1930:
  1792  02BB                     l1942:
  1793  02BB  3002               	movlw	2
  1794  02BC  0646               	xorwf	_ajustar,w
  1795  02BD  0447               	iorwf	_ajustar+1,w
  1796  02BE  1D03               	btfss	3,2
  1797  02BF  2AC1               	goto	u1941
  1798  02C0  2AC2               	goto	u1940
  1799  02C1                     u1941:
  1800  02C1  2AD2               	goto	l1948
  1801  02C2                     u1940:
  1802  02C2                     l1944:
  1803                           
  1804                           ;main.c: 177:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1805  02C2  01C6               	clrf	_ajustar
  1806  02C3  01C7               	clrf	_ajustar+1
  1807  02C4                     l1946:
  1808                           
  1809                           ;main.c: 178:                     ajustar = 1;
  1810  02C4  3003               	movlw	3
  1811  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1812  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1813  02C7  00C5               	movwf	??_main+2
  1814  02C8  308A               	movlw	138
  1815  02C9  00C4               	movwf	??_main+1
  1816  02CA  3055               	movlw	85
  1817  02CB  00C3               	movwf	??_main
  1818  02CC                     u2417:
  1819  02CC  0BC3               	decfsz	??_main,f
  1820  02CD  2ACC               	goto	u2417
  1821  02CE  0BC4               	decfsz	??_main+1,f
  1822  02CF  2ACC               	goto	u2417
  1823  02D0  0BC5               	decfsz	??_main+2,f
  1824  02D1  2ACC               	goto	u2417
  1825  02D2                     l1948:
  1826                           
  1827                           ;main.c: 180:                     ajustar = 2;
  1828  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1829  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1830  02D4  1C86               	btfss	6,1	;volatile
  1831  02D5  2AD7               	goto	u1951
  1832  02D6  2AD8               	goto	u1950
  1833  02D7                     u1951:
  1834  02D7  2ADF               	goto	l127
  1835  02D8                     u1950:
  1836  02D8                     l1950:
  1837  02D8  0846               	movf	_ajustar,w
  1838  02D9  0447               	iorwf	_ajustar+1,w
  1839  02DA  1D03               	btfss	3,2
  1840  02DB  2ADD               	goto	u1961
  1841  02DC  2ADE               	goto	u1960
  1842  02DD                     u1961:
  1843  02DD  2ADF               	goto	l127
  1844  02DE                     u1960:
  1845  02DE  28D7               	goto	l1846
  1846  02DF                     l127:
  1847  02DF  1C86               	btfss	6,1	;volatile
  1848  02E0  2AE2               	goto	u1971
  1849  02E1  2AE3               	goto	u1970
  1850  02E2                     u1971:
  1851  02E2  2AFB               	goto	l129
  1852  02E3                     u1970:
  1853  02E3                     l1954:
  1854  02E3  0346               	decf	_ajustar,w
  1855  02E4  0447               	iorwf	_ajustar+1,w
  1856  02E5  1D03               	btfss	3,2
  1857  02E6  2AE8               	goto	u1981
  1858  02E7  2AE9               	goto	u1980
  1859  02E8                     u1981:
  1860  02E8  2AFB               	goto	l129
  1861  02E9                     u1980:
  1862  02E9                     l1956:
  1863                           
  1864                           ;main.c: 184:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1865  02E9  3001               	movlw	1
  1866  02EA  07D4               	addwf	_min_start,f
  1867  02EB  1803               	skipnc
  1868  02EC  0AD5               	incf	_min_start+1,f
  1869  02ED  3000               	movlw	0
  1870  02EE  07D5               	addwf	_min_start+1,f
  1871                           
  1872                           ;main.c: 185:                 }
  1873  02EF  3000               	movlw	0
  1874  02F0  0255               	subwf	_min_start+1,w
  1875  02F1  303C               	movlw	60
  1876  02F2  1903               	skipnz
  1877  02F3  0254               	subwf	_min_start,w
  1878  02F4  1C03               	skipc
  1879  02F5  2AF7               	goto	u1991
  1880  02F6  2AF8               	goto	u1990
  1881  02F7                     u1991:
  1882  02F7  2A2B               	goto	l1916
  1883  02F8                     u1990:
  1884  02F8                     l1958:
  1885                           
  1886                           ;main.c: 186:                 if (RB1 == 1 && ajustar == 0){
  1887  02F8  01D4               	clrf	_min_start
  1888  02F9  01D5               	clrf	_min_start+1
  1889  02FA  2A2B               	goto	l1916
  1890  02FB                     l129:
  1891  02FB  1C86               	btfss	6,1	;volatile
  1892  02FC  2AFE               	goto	u2001
  1893  02FD  2AFF               	goto	u2000
  1894  02FE                     u2001:
  1895  02FE  286D               	goto	l1818
  1896  02FF                     u2000:
  1897  02FF                     l1962:
  1898  02FF  3002               	movlw	2
  1899  0300  0646               	xorwf	_ajustar,w
  1900  0301  0447               	iorwf	_ajustar+1,w
  1901  0302  1D03               	btfss	3,2
  1902  0303  2B05               	goto	u2011
  1903  0304  2B06               	goto	u2010
  1904  0305                     u2011:
  1905  0305  286D               	goto	l1818
  1906  0306                     u2010:
  1907  0306                     l1964:
  1908                           
  1909                           ;main.c: 190:                     min_stop++;
  1910  0306  3001               	movlw	1
  1911  0307  07DE               	addwf	_hora_start,f
  1912  0308  1803               	skipnc
  1913  0309  0ADF               	incf	_hora_start+1,f
  1914  030A  3000               	movlw	0
  1915  030B  07DF               	addwf	_hora_start+1,f
  1916                           
  1917                           ;main.c: 191:                     if(min_stop >= 60){
  1918  030C  3000               	movlw	0
  1919  030D  025F               	subwf	_hora_start+1,w
  1920  030E  3018               	movlw	24
  1921  030F  1903               	skipnz
  1922  0310  025E               	subwf	_hora_start,w
  1923  0311  1C03               	skipc
  1924  0312  2B14               	goto	u2021
  1925  0313  2B15               	goto	u2020
  1926  0314                     u2021:
  1927  0314  2A2B               	goto	l1916
  1928  0315                     u2020:
  1929  0315                     l1966:
  1930                           
  1931                           ;main.c: 192:                         min_stop = 0;
  1932  0315  01DE               	clrf	_hora_start
  1933  0316  01DF               	clrf	_hora_start+1
  1934  0317  2A2B               	goto	l1916
  1935  0318                     l1970:
  1936                           
  1937                           ;main.c: 198:                         hora_stop = 0;
  1938  0318  3080               	movlw	128
  1939  0319  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1940  031E                     l1972:
  1941                           
  1942                           ;main.c: 199:                     }
  1943  031E  30BC               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1944  031F  120A  118A  23F4  120A  118A  	fcall	_printf
  1945  0324                     l1974:
  1946                           
  1947                           ;main.c: 200:                     _delay((unsigned long)((250)*(4000000/4000.0)));
  1948  0324  30C0               	movlw	192
  1949  0325  120A  158A  268A  120A  118A  	fcall	_envia_lcd_comando
  1950                           
  1951                           ;main.c: 201:                 }
  1952  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1953  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1954  032C  085D               	movf	_hora_stop+1,w
  1955  032D  00AF               	movwf	?_printf+1
  1956  032E  085C               	movf	_hora_stop,w
  1957  032F  00AE               	movwf	?_printf
  1958  0330  0853               	movf	_min_stop+1,w
  1959  0331  00B1               	movwf	?_printf+3
  1960  0332  0852               	movf	_min_stop,w
  1961  0333  00B0               	movwf	?_printf+2
  1962  0334  3061               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1963  0335  120A  118A  23F4  120A  118A  	fcall	_printf
  1964  033A                     l1976:
  1965                           
  1966                           ;main.c: 202:                 break;
  1967  033A  1283               	bcf	3,5	;RP0=0, select bank0
  1968  033B  1303               	bcf	3,6	;RP1=0, select bank0
  1969  033C  1D06               	btfss	6,2	;volatile
  1970  033D  2B3F               	goto	u2031
  1971  033E  2B40               	goto	u2030
  1972  033F                     u2031:
  1973  033F  2B5B               	goto	l135
  1974  0340                     u2030:
  1975  0340                     l1978:
  1976  0340  0846               	movf	_ajustar,w
  1977  0341  0447               	iorwf	_ajustar+1,w
  1978  0342  1D03               	btfss	3,2
  1979  0343  2B45               	goto	u2041
  1980  0344  2B46               	goto	u2040
  1981  0345                     u2041:
  1982  0345  2B5B               	goto	l135
  1983  0346                     u2040:
  1984  0346                     l1980:
  1985                           
  1986                           ;main.c: 203:         }
  1987  0346  3003               	movlw	3
  1988  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0349  00C5               	movwf	??_main+2
  1991  034A  308A               	movlw	138
  1992  034B  00C4               	movwf	??_main+1
  1993  034C  3055               	movlw	85
  1994  034D  00C3               	movwf	??_main
  1995  034E                     u2427:
  1996  034E  0BC3               	decfsz	??_main,f
  1997  034F  2B4E               	goto	u2427
  1998  0350  0BC4               	decfsz	??_main+1,f
  1999  0351  2B4E               	goto	u2427
  2000  0352  0BC5               	decfsz	??_main+2,f
  2001  0353  2B4E               	goto	u2427
  2002                           
  2003                           ;main.c: 204:     }
  2004  0354  3001               	movlw	1
  2005  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0357  00C6               	movwf	_ajustar
  2008  0358  3000               	movlw	0
  2009  0359  00C7               	movwf	_ajustar+1
  2010                           
  2011                           ;main.c: 205:     return;
  2012  035A  2B93               	goto	l1992
  2013  035B                     l135:
  2014  035B  1D06               	btfss	6,2	;volatile
  2015  035C  2B5E               	goto	u2051
  2016  035D  2B5F               	goto	u2050
  2017  035E                     u2051:
  2018  035E  2B78               	goto	l137
  2019  035F                     u2050:
  2020  035F                     l1982:
  2021  035F  0346               	decf	_ajustar,w
  2022  0360  0447               	iorwf	_ajustar+1,w
  2023  0361  1D03               	btfss	3,2
  2024  0362  2B64               	goto	u2061
  2025  0363  2B65               	goto	u2060
  2026  0364                     u2061:
  2027  0364  2B78               	goto	l137
  2028  0365                     u2060:
  2029  0365                     l1984:
  2030                           
  2031                           ;main.c: 206: }
  2032  0365  3002               	movlw	2
  2033  0366  00C6               	movwf	_ajustar
  2034  0367  3000               	movlw	0
  2035  0368  00C7               	movwf	_ajustar+1
  2036                           
  2037                           ;main.c: 207: 
  2038  0369  3003               	movlw	3
  2039  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2040  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2041  036C  00C5               	movwf	??_main+2
  2042  036D  308A               	movlw	138
  2043  036E  00C4               	movwf	??_main+1
  2044  036F  3055               	movlw	85
  2045  0370  00C3               	movwf	??_main
  2046  0371                     u2437:
  2047  0371  0BC3               	decfsz	??_main,f
  2048  0372  2B71               	goto	u2437
  2049  0373  0BC4               	decfsz	??_main+1,f
  2050  0374  2B71               	goto	u2437
  2051  0375  0BC5               	decfsz	??_main+2,f
  2052  0376  2B71               	goto	u2437
  2053                           
  2054                           ;main.c: 208: void __attribute__((picinterrupt(("")))) Interrupt(void) {
  2055  0377  2B93               	goto	l1992
  2056  0378                     l137:
  2057  0378  1D06               	btfss	6,2	;volatile
  2058  0379  2B7B               	goto	u2071
  2059  037A  2B7C               	goto	u2070
  2060  037B                     u2071:
  2061  037B  2B93               	goto	l1992
  2062  037C                     u2070:
  2063  037C                     l1986:
  2064  037C  3002               	movlw	2
  2065  037D  0646               	xorwf	_ajustar,w
  2066  037E  0447               	iorwf	_ajustar+1,w
  2067  037F  1D03               	btfss	3,2
  2068  0380  2B82               	goto	u2081
  2069  0381  2B83               	goto	u2080
  2070  0382                     u2081:
  2071  0382  2B93               	goto	l1992
  2072  0383                     u2080:
  2073  0383                     l1988:
  2074                           
  2075                           ;main.c: 209: 
  2076  0383  01C6               	clrf	_ajustar
  2077  0384  01C7               	clrf	_ajustar+1
  2078  0385                     l1990:
  2079                           
  2080                           ;main.c: 210:     if (PIR1bits.TMR1IF) {
  2081  0385  3003               	movlw	3
  2082  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0388  00C5               	movwf	??_main+2
  2085  0389  308A               	movlw	138
  2086  038A  00C4               	movwf	??_main+1
  2087  038B  3055               	movlw	85
  2088  038C  00C3               	movwf	??_main
  2089  038D                     u2447:
  2090  038D  0BC3               	decfsz	??_main,f
  2091  038E  2B8D               	goto	u2447
  2092  038F  0BC4               	decfsz	??_main+1,f
  2093  0390  2B8D               	goto	u2447
  2094  0391  0BC5               	decfsz	??_main+2,f
  2095  0392  2B8D               	goto	u2447
  2096  0393                     l1992:
  2097                           
  2098                           ;main.c: 212:         if (cont > 2) {
  2099  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0395  1C86               	btfss	6,1	;volatile
  2102  0396  2B98               	goto	u2091
  2103  0397  2B99               	goto	u2090
  2104  0398                     u2091:
  2105  0398  2BA2               	goto	l140
  2106  0399                     u2090:
  2107  0399                     l1994:
  2108  0399  0846               	movf	_ajustar,w
  2109  039A  0447               	iorwf	_ajustar+1,w
  2110  039B  1D03               	btfss	3,2
  2111  039C  2B9E               	goto	u2101
  2112  039D  2B9F               	goto	u2100
  2113  039E                     u2101:
  2114  039E  2BA2               	goto	l140
  2115  039F                     u2100:
  2116  039F                     l1996:
  2117                           
  2118                           ;main.c: 213:             seg++;
  2119  039F  01CE               	clrf	_flag
  2120  03A0  01CF               	clrf	_flag+1
  2121  03A1  2A2B               	goto	l1916
  2122  03A2                     l140:
  2123  03A2  1C86               	btfss	6,1	;volatile
  2124  03A3  2BA5               	goto	u2111
  2125  03A4  2BA6               	goto	u2110
  2126  03A5                     u2111:
  2127  03A5  2BBE               	goto	l142
  2128  03A6                     u2110:
  2129  03A6                     l2000:
  2130  03A6  0346               	decf	_ajustar,w
  2131  03A7  0447               	iorwf	_ajustar+1,w
  2132  03A8  1D03               	btfss	3,2
  2133  03A9  2BAB               	goto	u2121
  2134  03AA  2BAC               	goto	u2120
  2135  03AB                     u2121:
  2136  03AB  2BBE               	goto	l142
  2137  03AC                     u2120:
  2138  03AC                     l2002:
  2139                           
  2140                           ;main.c: 216:                 seg = 0;
  2141  03AC  3001               	movlw	1
  2142  03AD  07D2               	addwf	_min_stop,f
  2143  03AE  1803               	skipnc
  2144  03AF  0AD3               	incf	_min_stop+1,f
  2145  03B0  3000               	movlw	0
  2146  03B1  07D3               	addwf	_min_stop+1,f
  2147                           
  2148                           ;main.c: 217:                 min++;
  2149  03B2  3000               	movlw	0
  2150  03B3  0253               	subwf	_min_stop+1,w
  2151  03B4  303C               	movlw	60
  2152  03B5  1903               	skipnz
  2153  03B6  0252               	subwf	_min_stop,w
  2154  03B7  1C03               	skipc
  2155  03B8  2BBA               	goto	u2131
  2156  03B9  2BBB               	goto	u2130
  2157  03BA                     u2131:
  2158  03BA  2A2B               	goto	l1916
  2159  03BB                     u2130:
  2160  03BB                     l2004:
  2161                           
  2162                           ;main.c: 218:             }
  2163  03BB  01D2               	clrf	_min_stop
  2164  03BC  01D3               	clrf	_min_stop+1
  2165  03BD  2A2B               	goto	l1916
  2166  03BE                     l142:
  2167  03BE  1C86               	btfss	6,1	;volatile
  2168  03BF  2BC1               	goto	u2141
  2169  03C0  2BC2               	goto	u2140
  2170  03C1                     u2141:
  2171  03C1  286D               	goto	l1818
  2172  03C2                     u2140:
  2173  03C2                     l2008:
  2174  03C2  3002               	movlw	2
  2175  03C3  0646               	xorwf	_ajustar,w
  2176  03C4  0447               	iorwf	_ajustar+1,w
  2177  03C5  1D03               	btfss	3,2
  2178  03C6  2BC8               	goto	u2151
  2179  03C7  2BC9               	goto	u2150
  2180  03C8                     u2151:
  2181  03C8  286D               	goto	l1818
  2182  03C9                     u2150:
  2183  03C9                     l2010:
  2184                           
  2185                           ;main.c: 222:             }
  2186  03C9  3001               	movlw	1
  2187  03CA  07DC               	addwf	_hora_stop,f
  2188  03CB  1803               	skipnc
  2189  03CC  0ADD               	incf	_hora_stop+1,f
  2190  03CD  3000               	movlw	0
  2191  03CE  07DD               	addwf	_hora_stop+1,f
  2192                           
  2193                           ;main.c: 223:             if (hora == 24) {
  2194  03CF  3000               	movlw	0
  2195  03D0  025D               	subwf	_hora_stop+1,w
  2196  03D1  3018               	movlw	24
  2197  03D2  1903               	skipnz
  2198  03D3  025C               	subwf	_hora_stop,w
  2199  03D4  1C03               	skipc
  2200  03D5  2BD7               	goto	u2161
  2201  03D6  2BD8               	goto	u2160
  2202  03D7                     u2161:
  2203  03D7  2A2B               	goto	l1916
  2204  03D8                     u2160:
  2205  03D8                     l2012:
  2206                           
  2207                           ;main.c: 224:                 hora = 0;
  2208  03D8  01DC               	clrf	_hora_stop
  2209  03D9  01DD               	clrf	_hora_stop+1
  2210  03DA  2A2B               	goto	l1916
  2211  03DB                     l2018:
  2212                           
  2213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 1, Range of values is 0 to 0
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte            4     3 (average)
  2219                           ; direct_byte           11     8 (fixed)
  2220                           ; jumptable            260     6 (fixed)
  2221                           ;	Chosen strategy is simple_byte
  2222  03DB  084F               	movf	_flag+1,w
  2223  03DC  3A00               	xorlw	0	; case 0
  2224  03DD  1903               	skipnz
  2225  03DE  2BE0               	goto	l2166
  2226  03DF  286D               	goto	l1818
  2227  03E0                     l2166:
  2228                           
  2229                           ; Switch size 1, requested type "simple"
  2230                           ; Number of cases is 5, Range of values is 0 to 4
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte           16     9 (average)
  2234                           ; direct_byte           23     8 (fixed)
  2235                           ; jumptable            260     6 (fixed)
  2236                           ;	Chosen strategy is simple_byte
  2237  03E0  084E               	movf	_flag,w
  2238  03E1  3A00               	xorlw	0	; case 0
  2239  03E2  1903               	skipnz
  2240  03E3  2871               	goto	l1820
  2241  03E4  3A01               	xorlw	1	; case 1
  2242  03E5  1903               	skipnz
  2243  03E6  28EC               	goto	l1848
  2244  03E7  3A03               	xorlw	3	; case 2
  2245  03E8  1903               	skipnz
  2246  03E9  2984               	goto	l1882
  2247  03EA  3A01               	xorlw	1	; case 3
  2248  03EB  1903               	skipnz
  2249  03EC  2A57               	goto	l1926
  2250  03ED  3A07               	xorlw	7	; case 4
  2251  03EE  1903               	skipnz
  2252  03EF  2B18               	goto	l1970
  2253  03F0  286D               	goto	l1818
  2254  03F1  120A  118A  280C   	ljmp	start
  2255  03F4                     __end_of_main:
  2256                           
  2257                           	psect	text1
  2258  03F4                     __ptext1:	
  2259 ;; *************** function _printf *****************
  2260 ;; Defined at:
  2261 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  f               1    wreg     PTR const unsigned char 
  2264 ;;		 -> STR_12(19), STR_11(17), STR_10(19), STR_9(17), 
  2265 ;;		 -> STR_8(23), STR_7(18), STR_6(19), STR_5(18), 
  2266 ;;		 -> STR_4(23), STR_3(21), STR_2(18), STR_1(18), 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  f               1   33[BANK0 ] PTR const unsigned char 
  2269 ;;		 -> STR_12(19), STR_11(17), STR_10(19), STR_9(17), 
  2270 ;;		 -> STR_8(23), STR_7(18), STR_6(19), STR_5(18), 
  2271 ;;		 -> STR_4(23), STR_3(21), STR_2(18), STR_1(18), 
  2272 ;;  tmpval          4    0        struct .
  2273 ;;  width           2   31[BANK0 ] int 
  2274 ;;  val             2   28[BANK0 ] unsigned int 
  2275 ;;  len             2   26[BANK0 ] unsigned int 
  2276 ;;  c               1   34[BANK0 ] unsigned char 
  2277 ;;  flag            1   30[BANK0 ] unsigned char 
  2278 ;;  ap              1   25[BANK0 ] PTR void [1]
  2279 ;;		 -> ?_printf(2), 
  2280 ;;  prec            1   24[BANK0 ] char 
  2281 ;;  cp              1   23[BANK0 ] PTR const unsigned char 
  2282 ;;		 -> printf@c(1), 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  2   14[BANK0 ] int 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       6       0       0       0
  2293 ;;      Locals:         0      12       0       0       0
  2294 ;;      Temps:          0       3       0       0       0
  2295 ;;      Totals:         0      21       0       0       0
  2296 ;;Total ram usage:       21 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    4
  2299 ;; This function calls:
  2300 ;;		___lwdiv
  2301 ;;		___lwmod
  2302 ;;		___wmul
  2303 ;;		_isdigit
  2304 ;;		_putch
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           
  2311                           ;psect for function _printf
  2312  03F4                     _printf:
  2313                           
  2314                           ;incstack = 0
  2315                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2316                           ;printf@f stored from wreg
  2317  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2318  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2319  03F6  00C1               	movwf	printf@f
  2320  03F7                     l1620:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514:  int width;;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char 
      +                          prec;
  2323  03F7  302E               	movlw	(low (?_printf| 0))& (0+255)
  2324  03F8  00B4               	movwf	??_printf
  2325  03F9  0834               	movf	??_printf,w
  2326  03FA  00B9               	movwf	printf@ap
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2329  03FB  2E04               	goto	l1736
  2330  03FC                     l1622:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2333  03FC  3025               	movlw	37
  2334  03FD  0642               	xorwf	printf@c,w
  2335  03FE  1903               	btfsc	3,2
  2336  03FF  2C01               	goto	u1351
  2337  0400  2C02               	goto	u1350
  2338  0401                     u1351:
  2339  0401  2C09               	goto	l1626
  2340  0402                     u1350:
  2341  0402                     l1624:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  2344  0402  0842               	movf	printf@c,w
  2345  0403  120A  158A  2680  120A  118A  	fcall	_putch
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2348  0408  2E04               	goto	l1736
  2349  0409                     l1626:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2352  0409  01BF               	clrf	printf@width
  2353  040A  01C0               	clrf	printf@width+1
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2356  040B  01BE               	clrf	printf@flag
  2357  040C  2C12               	goto	l1632
  2358  040D                     l282:	
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2360                           
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2363  040D  153E               	bsf	printf@flag,2
  2364  040E                     l1628:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  2367  040E  3001               	movlw	1
  2368  040F  00B4               	movwf	??_printf
  2369  0410  0834               	movf	??_printf,w
  2370  0411  07C1               	addwf	printf@f,f
  2371  0412                     l1632:	
  2372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2373                           
  2374  0412  0841               	movf	printf@f,w
  2375  0413  0084               	movwf	4
  2376  0414  120A  118A  2701  120A  118A  	fcall	stringdir
  2377  0419  00B4               	movwf	??_printf
  2378  041A  01B5               	clrf	??_printf+1
  2379                           
  2380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2381                           ; Switch size 1, requested type "simple"
  2382                           ; Number of cases is 1, Range of values is 0 to 0
  2383                           ; switch strategies available:
  2384                           ; Name         Instructions Cycles
  2385                           ; simple_byte            4     3 (average)
  2386                           ; direct_byte           11     8 (fixed)
  2387                           ; jumptable            260     6 (fixed)
  2388                           ;	Chosen strategy is simple_byte
  2389  041B  0835               	movf	??_printf+1,w
  2390  041C  3A00               	xorlw	0	; case 0
  2391  041D  1903               	skipnz
  2392  041E  2C20               	goto	l2168
  2393  041F  2C25               	goto	l1634
  2394  0420                     l2168:
  2395                           
  2396                           ; Switch size 1, requested type "simple"
  2397                           ; Number of cases is 1, Range of values is 48 to 48
  2398                           ; switch strategies available:
  2399                           ; Name         Instructions Cycles
  2400                           ; simple_byte            4     3 (average)
  2401                           ; direct_byte           14    11 (fixed)
  2402                           ; jumptable            263     9 (fixed)
  2403                           ;	Chosen strategy is simple_byte
  2404  0420  0834               	movf	??_printf,w
  2405  0421  3A30               	xorlw	48	; case 48
  2406  0422  1903               	skipnz
  2407  0423  2C0D               	goto	l282
  2408  0424  2C25               	goto	l1634
  2409  0425                     l1634:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2412  0425  0841               	movf	printf@f,w
  2413  0426  0084               	movwf	4
  2414  0427  120A  118A  2701  120A  118A  	fcall	stringdir
  2415  042C  120A  118A  27E4  120A  118A  	fcall	_isdigit
  2416  0431  1C03               	btfss	3,0
  2417  0432  2C34               	goto	u1361
  2418  0433  2C35               	goto	u1360
  2419  0434                     u1361:
  2420  0434  2CD2               	goto	l1672
  2421  0435                     u1360:
  2422  0435                     l1636:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2425  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0437  01BF               	clrf	printf@width
  2428  0438  01C0               	clrf	printf@width+1
  2429  0439                     l1638:
  2430                           
  2431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2432  0439  300A               	movlw	10
  2433  043A  1283               	bcf	3,5	;RP0=0, select bank0
  2434  043B  1303               	bcf	3,6	;RP1=0, select bank0
  2435  043C  00A0               	movwf	___wmul@multiplier
  2436  043D  3000               	movlw	0
  2437  043E  00A1               	movwf	___wmul@multiplier+1
  2438  043F  0840               	movf	printf@width+1,w
  2439  0440  00A3               	movwf	___wmul@multiplicand+1
  2440  0441  083F               	movf	printf@width,w
  2441  0442  00A2               	movwf	___wmul@multiplicand
  2442  0443  120A  158A  26E6  120A  118A  	fcall	___wmul
  2443  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2445  044A  0821               	movf	?___wmul+1,w
  2446  044B  00C0               	movwf	printf@width+1
  2447  044C  0820               	movf	?___wmul,w
  2448  044D  00BF               	movwf	printf@width
  2449  044E                     l1640:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2452  044E  0841               	movf	printf@f,w
  2453  044F  0084               	movwf	4
  2454  0450  120A  118A  2701  120A  118A  	fcall	stringdir
  2455  0455  3ED0               	addlw	208
  2456  0456  00B4               	movwf	??_printf
  2457  0457  30FF               	movlw	255
  2458  0458  1803               	skipnc
  2459  0459  3000               	movlw	0
  2460  045A  00B5               	movwf	??_printf+1
  2461  045B  0834               	movf	??_printf,w
  2462  045C  07BF               	addwf	printf@width,f
  2463  045D  1803               	skipnc
  2464  045E  0AC0               	incf	printf@width+1,f
  2465  045F  0835               	movf	??_printf+1,w
  2466  0460  07C0               	addwf	printf@width+1,f
  2467  0461                     l1642:
  2468  0461  3001               	movlw	1
  2469  0462  00B4               	movwf	??_printf
  2470  0463  0834               	movf	??_printf,w
  2471  0464  07C1               	addwf	printf@f,f
  2472  0465                     l1644:
  2473                           
  2474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2475  0465  0841               	movf	printf@f,w
  2476  0466  0084               	movwf	4
  2477  0467  120A  118A  2701  120A  118A  	fcall	stringdir
  2478  046C  120A  118A  27E4  120A  118A  	fcall	_isdigit
  2479  0471  1803               	btfsc	3,0
  2480  0472  2C74               	goto	u1371
  2481  0473  2C75               	goto	u1370
  2482  0474                     u1371:
  2483  0474  2C39               	goto	l1638
  2484  0475                     u1370:
  2485  0475  2CD2               	goto	l1672
  2486  0476                     l1646:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  2489  0476  3000               	movlw	0
  2490  0477  0240               	subwf	printf@width+1,w
  2491  0478  3002               	movlw	2
  2492  0479  1903               	skipnz
  2493  047A  023F               	subwf	printf@width,w
  2494  047B  1C03               	skipc
  2495  047C  2C7E               	goto	u1381
  2496  047D  2C7F               	goto	u1380
  2497  047E                     u1381:
  2498  047E  2C86               	goto	l1650
  2499  047F                     u1380:
  2500  047F                     l1648:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  2503  047F  30FF               	movlw	255
  2504  0480  07BF               	addwf	printf@width,f
  2505  0481  1803               	skipnc
  2506  0482  0AC0               	incf	printf@width+1,f
  2507  0483  30FF               	movlw	255
  2508  0484  07C0               	addwf	printf@width+1,f
  2509  0485  2C8F               	goto	l1654
  2510  0486                     l1650:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  2513  0486  01BF               	clrf	printf@width
  2514  0487  01C0               	clrf	printf@width+1
  2515  0488  2C8F               	goto	l1654
  2516  0489                     l1652:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 791:      (putch(
      +                          ' ') );
  2519  0489  3020               	movlw	32
  2520  048A  120A  158A  2680  120A  118A  	fcall	_putch
  2521  048F                     l1654:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  2524  048F  30FF               	movlw	255
  2525  0490  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0491  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0492  07BF               	addwf	printf@width,f
  2528  0493  1803               	skipnc
  2529  0494  0AC0               	incf	printf@width+1,f
  2530  0495  30FF               	movlw	255
  2531  0496  07C0               	addwf	printf@width+1,f
  2532  0497  0A3F               	incf	printf@width,w
  2533  0498  1D03               	skipz
  2534  0499  2C9E               	goto	u1391
  2535  049A  0A40               	incf	printf@width+1,w
  2536  049B  1D03               	btfss	3,2
  2537  049C  2C9E               	goto	u1391
  2538  049D  2C9F               	goto	u1390
  2539  049E                     u1391:
  2540  049E  2C89               	goto	l1652
  2541  049F                     u1390:
  2542  049F  2CAF               	goto	l1660
  2543  04A0                     l1656:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 794:     (putch(*
      +                          cp++) );
  2546  04A0  0837               	movf	printf@cp,w
  2547  04A1  0084               	movwf	4
  2548  04A2  1383               	bcf	3,7	;select IRP bank0
  2549  04A3  0800               	movf	0,w
  2550  04A4  120A  158A  2680  120A  118A  	fcall	_putch
  2551  04A9                     l1658:
  2552  04A9  3001               	movlw	1
  2553  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2554  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2555  04AC  00B4               	movwf	??_printf
  2556  04AD  0834               	movf	??_printf,w
  2557  04AE  07B7               	addwf	printf@cp,f
  2558  04AF                     l1660:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  2561  04AF  3001               	movlw	1
  2562  04B0  02BA               	subwf	printf@len,f
  2563  04B1  3000               	movlw	0
  2564  04B2  1C03               	skipc
  2565  04B3  03BB               	decf	printf@len+1,f
  2566  04B4  02BB               	subwf	printf@len+1,f
  2567  04B5  0A3A               	incf	printf@len,w
  2568  04B6  1D03               	skipz
  2569  04B7  2CBC               	goto	u1401
  2570  04B8  0A3B               	incf	printf@len+1,w
  2571  04B9  1D03               	btfss	3,2
  2572  04BA  2CBC               	goto	u1401
  2573  04BB  2CBD               	goto	u1400
  2574  04BC                     u1401:
  2575  04BC  2CA0               	goto	l1656
  2576  04BD                     u1400:
  2577  04BD  2E04               	goto	l1736
  2578  04BE                     l1662:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  2581  04BE  0839               	movf	printf@ap,w
  2582  04BF  0084               	movwf	4
  2583  04C0  1383               	bcf	3,7	;select IRP bank0
  2584  04C1  0800               	movf	0,w
  2585  04C2  00B4               	movwf	??_printf
  2586  04C3  0834               	movf	??_printf,w
  2587  04C4  00C2               	movwf	printf@c
  2588  04C5                     l1664:
  2589  04C5  3002               	movlw	2
  2590  04C6  00B4               	movwf	??_printf
  2591  04C7  0834               	movf	??_printf,w
  2592  04C8  07B9               	addwf	printf@ap,f
  2593  04C9                     l1666:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 831:    cp = (cha
      +                          r *)&c;
  2596  04C9  3042               	movlw	(low (printf@c| 0))& (0+255)
  2597  04CA  00B4               	movwf	??_printf
  2598  04CB  0834               	movf	??_printf,w
  2599  04CC  00B7               	movwf	printf@cp
  2600  04CD                     l1668:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 832:    len = 1;
  2603  04CD  3001               	movlw	1
  2604  04CE  00BA               	movwf	printf@len
  2605  04CF  3000               	movlw	0
  2606  04D0  00BB               	movwf	printf@len+1
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 833:    goto dost
      +                          ring;
  2609  04D1  2C76               	goto	l1646
  2610  04D2                     l1672:
  2611  04D2  3001               	movlw	1
  2612  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2613  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2614  04D5  07C1               	addwf	printf@f,f
  2615  04D6  30FF               	movlw	-1
  2616  04D7  0741               	addwf	printf@f,w
  2617  04D8  0084               	movwf	4
  2618  04D9  120A  118A  2701  120A  118A  	fcall	stringdir
  2619  04DE  00C2               	movwf	printf@c
  2620  04DF  00B4               	movwf	??_printf
  2621  04E0  01B5               	clrf	??_printf+1
  2622                           
  2623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2624                           ; Switch size 1, requested type "simple"
  2625                           ; Number of cases is 1, Range of values is 0 to 0
  2626                           ; switch strategies available:
  2627                           ; Name         Instructions Cycles
  2628                           ; simple_byte            4     3 (average)
  2629                           ; direct_byte           11     8 (fixed)
  2630                           ; jumptable            260     6 (fixed)
  2631                           ;	Chosen strategy is simple_byte
  2632  04E1  0835               	movf	??_printf+1,w
  2633  04E2  3A00               	xorlw	0	; case 0
  2634  04E3  1903               	skipnz
  2635  04E4  2CE6               	goto	l2170
  2636  04E5  2CC9               	goto	l1666
  2637  04E6                     l2170:
  2638                           
  2639                           ; Switch size 1, requested type "simple"
  2640                           ; Number of cases is 4, Range of values is 0 to 105
  2641                           ; switch strategies available:
  2642                           ; Name         Instructions Cycles
  2643                           ; simple_byte           13     7 (average)
  2644                           ; jumptable            260     6 (fixed)
  2645                           ;	Chosen strategy is simple_byte
  2646  04E6  0834               	movf	??_printf,w
  2647  04E7  3A00               	xorlw	0	; case 0
  2648  04E8  1903               	skipnz
  2649  04E9  2E18               	goto	l327
  2650  04EA  3A63               	xorlw	99	; case 99
  2651  04EB  1903               	skipnz
  2652  04EC  2CBE               	goto	l1662
  2653  04ED  3A07               	xorlw	7	; case 100
  2654  04EE  1903               	skipnz
  2655  04EF  2CF4               	goto	l1674
  2656  04F0  3A0D               	xorlw	13	; case 105
  2657  04F1  1903               	skipnz
  2658  04F2  2CF4               	goto	l1674
  2659  04F3  2CC9               	goto	l1666
  2660  04F4                     l1674:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2663  04F4  0839               	movf	printf@ap,w
  2664  04F5  0084               	movwf	4
  2665  04F6  1383               	bcf	3,7	;select IRP bank0
  2666  04F7  0800               	movf	0,w
  2667  04F8  00BC               	movwf	printf@val
  2668  04F9  0A84               	incf	4,f
  2669  04FA  0800               	movf	0,w
  2670  04FB  00BD               	movwf	printf@val+1
  2671  04FC                     l1676:
  2672  04FC  3002               	movlw	2
  2673  04FD  00B4               	movwf	??_printf
  2674  04FE  0834               	movf	??_printf,w
  2675  04FF  07B9               	addwf	printf@ap,f
  2676  0500                     l1678:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2679  0500  1FBD               	btfss	printf@val+1,7
  2680  0501  2D03               	goto	u1411
  2681  0502  2D04               	goto	u1410
  2682  0503                     u1411:
  2683  0503  2D0D               	goto	l1684
  2684  0504                     u1410:
  2685  0504                     l1680:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2688  0504  3003               	movlw	3
  2689  0505  00B4               	movwf	??_printf
  2690  0506  0834               	movf	??_printf,w
  2691  0507  04BE               	iorwf	printf@flag,f
  2692  0508                     l1682:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2695  0508  09BC               	comf	printf@val,f
  2696  0509  09BD               	comf	printf@val+1,f
  2697  050A  0ABC               	incf	printf@val,f
  2698  050B  1903               	skipnz
  2699  050C  0ABD               	incf	printf@val+1,f
  2700  050D                     l1684:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2703  050D  01C2               	clrf	printf@c
  2704  050E  0AC2               	incf	printf@c,f
  2705  050F                     l1686:
  2706  050F  3005               	movlw	5
  2707  0510  0642               	xorwf	printf@c,w
  2708  0511  1D03               	btfss	3,2
  2709  0512  2D14               	goto	u1421
  2710  0513  2D15               	goto	u1420
  2711  0514                     u1421:
  2712  0514  2D16               	goto	l1690
  2713  0515                     u1420:
  2714  0515  2D3C               	goto	l1696
  2715  0516                     l1690:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2718  0516  0842               	movf	printf@c,w
  2719  0517  00B4               	movwf	??_printf
  2720  0518  0734               	addwf	??_printf,w
  2721  0519  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2722  051A  0084               	movwf	4
  2723  051B  120A  118A  2701  120A  118A  	fcall	stringdir
  2724  0520  00B5               	movwf	??_printf+1
  2725  0521  120A  118A  2701  120A  118A  	fcall	stringdir
  2726  0526  00B6               	movwf	??_printf+2
  2727  0527  0836               	movf	??_printf+2,w
  2728  0528  023D               	subwf	printf@val+1,w
  2729  0529  1D03               	skipz
  2730  052A  2D2D               	goto	u1435
  2731  052B  0835               	movf	??_printf+1,w
  2732  052C  023C               	subwf	printf@val,w
  2733  052D                     u1435:
  2734  052D  1803               	skipnc
  2735  052E  2D30               	goto	u1431
  2736  052F  2D31               	goto	u1430
  2737  0530                     u1431:
  2738  0530  2D32               	goto	l1694
  2739  0531                     u1430:
  2740  0531  2D3C               	goto	l1696
  2741  0532                     l1694:
  2742  0532  3001               	movlw	1
  2743  0533  00B4               	movwf	??_printf
  2744  0534  0834               	movf	??_printf,w
  2745  0535  07C2               	addwf	printf@c,f
  2746  0536  3005               	movlw	5
  2747  0537  0642               	xorwf	printf@c,w
  2748  0538  1D03               	btfss	3,2
  2749  0539  2D3B               	goto	u1441
  2750  053A  2D3C               	goto	u1440
  2751  053B                     u1441:
  2752  053B  2D16               	goto	l1690
  2753  053C                     u1440:
  2754  053C                     l1696:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2757  053C  083F               	movf	printf@width,w
  2758  053D  0440               	iorwf	printf@width+1,w
  2759  053E  1903               	btfsc	3,2
  2760  053F  2D41               	goto	u1451
  2761  0540  2D42               	goto	u1450
  2762  0541                     u1451:
  2763  0541  2D4E               	goto	l310
  2764  0542                     u1450:
  2765  0542                     l1698:
  2766  0542  083E               	movf	printf@flag,w
  2767  0543  3903               	andlw	3
  2768  0544  1903               	btfsc	3,2
  2769  0545  2D47               	goto	u1461
  2770  0546  2D48               	goto	u1460
  2771  0547                     u1461:
  2772  0547  2D4E               	goto	l310
  2773  0548                     u1460:
  2774  0548                     l1700:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2777  0548  30FF               	movlw	255
  2778  0549  07BF               	addwf	printf@width,f
  2779  054A  1803               	skipnc
  2780  054B  0AC0               	incf	printf@width+1,f
  2781  054C  30FF               	movlw	255
  2782  054D  07C0               	addwf	printf@width+1,f
  2783  054E                     l310:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2786  054E  0840               	movf	printf@width+1,w
  2787  054F  3A80               	xorlw	128
  2788  0550  3C80               	sublw	128
  2789  0551  1D03               	skipz
  2790  0552  2D55               	goto	u1475
  2791  0553  083F               	movf	printf@width,w
  2792  0554  0242               	subwf	printf@c,w
  2793  0555                     u1475:
  2794  0555  1803               	skipnc
  2795  0556  2D58               	goto	u1471
  2796  0557  2D59               	goto	u1470
  2797  0558                     u1471:
  2798  0558  2D65               	goto	l1704
  2799  0559                     u1470:
  2800  0559                     l1702:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2803  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2804  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2805  055B  0842               	movf	printf@c,w
  2806  055C  00B4               	movwf	??_printf
  2807  055D  01B5               	clrf	??_printf+1
  2808  055E  0834               	movf	??_printf,w
  2809  055F  02BF               	subwf	printf@width,f
  2810  0560  0835               	movf	??_printf+1,w
  2811  0561  1C03               	skipc
  2812  0562  03C0               	decf	printf@width+1,f
  2813  0563  02C0               	subwf	printf@width+1,f
  2814  0564  2D69               	goto	l1706
  2815  0565                     l1704:
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2818  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0567  01BF               	clrf	printf@width
  2821  0568  01C0               	clrf	printf@width+1
  2822  0569                     l1706:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2825  0569  1D3E               	btfss	printf@flag,2
  2826  056A  2D6C               	goto	u1481
  2827  056B  2D6D               	goto	u1480
  2828  056C                     u1481:
  2829  056C  2D96               	goto	l1718
  2830  056D                     u1480:
  2831  056D                     l1708:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2834  056D  083E               	movf	printf@flag,w
  2835  056E  3903               	andlw	3
  2836  056F  1903               	btfsc	3,2
  2837  0570  2D72               	goto	u1491
  2838  0571  2D73               	goto	u1490
  2839  0572                     u1491:
  2840  0572  2D79               	goto	l1712
  2841  0573                     u1490:
  2842  0573                     l1710:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     (putch(
      +                          '-') );
  2845  0573  302D               	movlw	45
  2846  0574  120A  158A  2680  120A  118A  	fcall	_putch
  2847  0579                     l1712:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2850  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2851  057A  1303               	bcf	3,6	;RP1=0, select bank0
  2852  057B  083F               	movf	printf@width,w
  2853  057C  0440               	iorwf	printf@width+1,w
  2854  057D  1903               	btfsc	3,2
  2855  057E  2D80               	goto	u1501
  2856  057F  2D81               	goto	u1500
  2857  0580                     u1501:
  2858  0580  2DBC               	goto	l1728
  2859  0581                     u1500:
  2860  0581                     l1714:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      (putch
      +                          ('0') );
  2863  0581  3030               	movlw	48
  2864  0582  120A  158A  2680  120A  118A  	fcall	_putch
  2865  0587                     l1716:
  2866  0587  30FF               	movlw	255
  2867  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2869  058A  07BF               	addwf	printf@width,f
  2870  058B  1803               	skipnc
  2871  058C  0AC0               	incf	printf@width+1,f
  2872  058D  30FF               	movlw	255
  2873  058E  07C0               	addwf	printf@width+1,f
  2874  058F  083F               	movf	printf@width,w
  2875  0590  0440               	iorwf	printf@width+1,w
  2876  0591  1D03               	btfss	3,2
  2877  0592  2D94               	goto	u1511
  2878  0593  2D95               	goto	u1510
  2879  0594                     u1511:
  2880  0594  2D81               	goto	l1714
  2881  0595                     u1510:
  2882  0595  2DBC               	goto	l1728
  2883  0596                     l1718:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2886  0596  083F               	movf	printf@width,w
  2887  0597  0440               	iorwf	printf@width+1,w
  2888  0598  1903               	btfsc	3,2
  2889  0599  2D9B               	goto	u1521
  2890  059A  2D9C               	goto	u1520
  2891  059B                     u1521:
  2892  059B  2DB0               	goto	l1724
  2893  059C                     u1520:
  2894  059C                     l1720:
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      (putch
      +                          (' ') );
  2897  059C  3020               	movlw	32
  2898  059D  120A  158A  2680  120A  118A  	fcall	_putch
  2899  05A2                     l1722:
  2900  05A2  30FF               	movlw	255
  2901  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2902  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2903  05A5  07BF               	addwf	printf@width,f
  2904  05A6  1803               	skipnc
  2905  05A7  0AC0               	incf	printf@width+1,f
  2906  05A8  30FF               	movlw	255
  2907  05A9  07C0               	addwf	printf@width+1,f
  2908  05AA  083F               	movf	printf@width,w
  2909  05AB  0440               	iorwf	printf@width+1,w
  2910  05AC  1D03               	btfss	3,2
  2911  05AD  2DAF               	goto	u1531
  2912  05AE  2DB0               	goto	u1530
  2913  05AF                     u1531:
  2914  05AF  2D9C               	goto	l1720
  2915  05B0                     u1530:
  2916  05B0                     l1724:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2919  05B0  083E               	movf	printf@flag,w
  2920  05B1  3903               	andlw	3
  2921  05B2  1903               	btfsc	3,2
  2922  05B3  2DB5               	goto	u1541
  2923  05B4  2DB6               	goto	u1540
  2924  05B5                     u1541:
  2925  05B5  2DBC               	goto	l1728
  2926  05B6                     u1540:
  2927  05B6                     l1726:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  2930  05B6  302D               	movlw	45
  2931  05B7  120A  158A  2680  120A  118A  	fcall	_putch
  2932  05BC                     l1728:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2935  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  2936  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  2937  05BE  0842               	movf	printf@c,w
  2938  05BF  00B4               	movwf	??_printf
  2939  05C0  0834               	movf	??_printf,w
  2940  05C1  00B8               	movwf	printf@prec
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2943  05C2  2DF9               	goto	l1734
  2944  05C3                     l1730:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2947  05C3  300A               	movlw	10
  2948  05C4  00A8               	movwf	___lwmod@divisor
  2949  05C5  3000               	movlw	0
  2950  05C6  00A9               	movwf	___lwmod@divisor+1
  2951  05C7  0838               	movf	printf@prec,w
  2952  05C8  00B4               	movwf	??_printf
  2953  05C9  0734               	addwf	??_printf,w
  2954  05CA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2955  05CB  0084               	movwf	4
  2956  05CC  120A  118A  2701  120A  118A  	fcall	stringdir
  2957  05D1  00A0               	movwf	___lwdiv@divisor
  2958  05D2  120A  118A  2701  120A  118A  	fcall	stringdir
  2959  05D7  00A1               	movwf	___lwdiv@divisor+1
  2960  05D8  083D               	movf	printf@val+1,w
  2961  05D9  00A3               	movwf	___lwdiv@dividend+1
  2962  05DA  083C               	movf	printf@val,w
  2963  05DB  00A2               	movwf	___lwdiv@dividend
  2964  05DC  120A  158A  2749  120A  118A  	fcall	___lwdiv
  2965  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2966  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2967  05E3  0821               	movf	?___lwdiv+1,w
  2968  05E4  00AB               	movwf	___lwmod@dividend+1
  2969  05E5  0820               	movf	?___lwdiv,w
  2970  05E6  00AA               	movwf	___lwmod@dividend
  2971  05E7  120A  158A  270D  120A  118A  	fcall	___lwmod
  2972  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2973  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2974  05EE  0828               	movf	?___lwmod,w
  2975  05EF  3E30               	addlw	48
  2976  05F0  00B5               	movwf	??_printf+1
  2977  05F1  0835               	movf	??_printf+1,w
  2978  05F2  00C2               	movwf	printf@c
  2979  05F3                     l1732:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  2982  05F3  0842               	movf	printf@c,w
  2983  05F4  120A  158A  2680  120A  118A  	fcall	_putch
  2984  05F9                     l1734:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2987  05F9  30FF               	movlw	255
  2988  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2989  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2990  05FC  00B4               	movwf	??_printf
  2991  05FD  0834               	movf	??_printf,w
  2992  05FE  07B8               	addwf	printf@prec,f
  2993  05FF  0A38               	incf	printf@prec,w
  2994  0600  1D03               	btfss	3,2
  2995  0601  2E03               	goto	u1551
  2996  0602  2E04               	goto	u1550
  2997  0603                     u1551:
  2998  0603  2DC3               	goto	l1730
  2999  0604                     u1550:
  3000  0604                     l1736:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3003  0604  3001               	movlw	1
  3004  0605  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0606  1303               	bcf	3,6	;RP1=0, select bank0
  3006  0607  07C1               	addwf	printf@f,f
  3007  0608  30FF               	movlw	-1
  3008  0609  0741               	addwf	printf@f,w
  3009  060A  0084               	movwf	4
  3010  060B  120A  118A  2701  120A  118A  	fcall	stringdir
  3011  0610  00B4               	movwf	??_printf
  3012  0611  0834               	movf	??_printf,w
  3013  0612  00C2               	movwf	printf@c
  3014  0613  0842               	movf	printf@c,w
  3015  0614  1D03               	btfss	3,2
  3016  0615  2E17               	goto	u1561
  3017  0616  2E18               	goto	u1560
  3018  0617                     u1561:
  3019  0617  2BFC               	goto	l1622
  3020  0618                     u1560:
  3021  0618                     l327:
  3022  0618  0008               	return
  3023  0619                     __end_of_printf:
  3024                           
  3025                           	psect	text2
  3026  0E80                     __ptext2:	
  3027 ;; *************** function _putch *****************
  3028 ;; Defined at:
  3029 ;;		line 325 in file "main.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  p               1    wreg     unsigned char 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  p               1    2[BANK0 ] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0, pclath, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       0       0       0       0
  3044 ;;      Locals:         0       1       0       0       0
  3045 ;;      Temps:          0       0       0       0       0
  3046 ;;      Totals:         0       1       0       0       0
  3047 ;;Total ram usage:        1 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    3
  3050 ;; This function calls:
  3051 ;;		_envia_lcd_dado
  3052 ;; This function is called by:
  3053 ;;		_printf
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _putch
  3059  0E80                     _putch:
  3060                           
  3061                           ;incstack = 0
  3062                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3063                           ;putch@p stored from wreg
  3064  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0E82  00A2               	movwf	putch@p
  3067  0E83                     l1520:
  3068  0E83  0822               	movf	putch@p,w
  3069  0E84  120A  158A  269C  120A  158A  	fcall	_envia_lcd_dado
  3070  0E89                     l182:
  3071  0E89  0008               	return
  3072  0E8A                     __end_of_putch:
  3073                           
  3074                           	psect	text3
  3075  0E9C                     __ptext3:	
  3076 ;; *************** function _envia_lcd_dado *****************
  3077 ;; Defined at:
  3078 ;;		line 318 in file "main.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  valor           1    wreg     unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  valor           1    1[BANK0 ] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       0       0       0
  3093 ;;      Locals:         0       1       0       0       0
  3094 ;;      Temps:          0       1       0       0       0
  3095 ;;      Totals:         0       2       0       0       0
  3096 ;;Total ram usage:        2 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    2
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_putch
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function _envia_lcd_dado
  3108  0E9C                     _envia_lcd_dado:
  3109                           
  3110                           ;incstack = 0
  3111                           ; Regs used in _envia_lcd_dado: [wreg]
  3112                           ;envia_lcd_dado@valor stored from wreg
  3113  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0E9E  00A1               	movwf	envia_lcd_dado@valor
  3116  0E9F                     l1504:
  3117  0E9F  1407               	bsf	7,0	;volatile
  3118  0EA0                     l1506:
  3119  0EA0  3020               	movlw	32
  3120  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0EA3  00A0               	movwf	??_envia_lcd_dado
  3123  0EA4                     u2457:
  3124  0EA4  0BA0               	decfsz	??_envia_lcd_dado,f
  3125  0EA5  2EA4               	goto	u2457
  3126  0EA6  0000               	nop
  3127  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0EA9  0821               	movf	envia_lcd_dado@valor,w
  3130  0EAA  0088               	movwf	8	;volatile
  3131  0EAB                     l1508:
  3132  0EAB  1487               	bsf	7,1	;volatile
  3133  0EAC                     l1510:
  3134  0EAC  1087               	bcf	7,1	;volatile
  3135  0EAD                     l179:
  3136  0EAD  0008               	return
  3137  0EAE                     __end_of_envia_lcd_dado:
  3138                           
  3139                           	psect	text4
  3140  07E4                     __ptext4:	
  3141 ;; *************** function _isdigit *****************
  3142 ;; Defined at:
  3143 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  c               1    wreg     unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  c               1    1[BANK0 ] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;		None               void
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3157 ;;      Params:         0       0       0       0       0
  3158 ;;      Locals:         0       2       0       0       0
  3159 ;;      Temps:          0       0       0       0       0
  3160 ;;      Totals:         0       2       0       0       0
  3161 ;;Total ram usage:        2 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    2
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_printf
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _isdigit
  3173  07E4                     _isdigit:
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3177                           ;isdigit@c stored from wreg
  3178  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  3179  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  3180  07E6  00A1               	movwf	isdigit@c
  3181  07E7                     l1522:
  3182  07E7  01A0               	clrf	_isdigit$901
  3183  07E8                     l1524:
  3184  07E8  303A               	movlw	58
  3185  07E9  0221               	subwf	isdigit@c,w
  3186  07EA  1803               	skipnc
  3187  07EB  2FED               	goto	u1161
  3188  07EC  2FEE               	goto	u1160
  3189  07ED                     u1161:
  3190  07ED  2FF6               	goto	l1530
  3191  07EE                     u1160:
  3192  07EE                     l1526:
  3193  07EE  3030               	movlw	48
  3194  07EF  0221               	subwf	isdigit@c,w
  3195  07F0  1C03               	skipc
  3196  07F1  2FF3               	goto	u1171
  3197  07F2  2FF4               	goto	u1170
  3198  07F3                     u1171:
  3199  07F3  2FF6               	goto	l1530
  3200  07F4                     u1170:
  3201  07F4                     l1528:
  3202  07F4  01A0               	clrf	_isdigit$901
  3203  07F5  0AA0               	incf	_isdigit$901,f
  3204  07F6                     l1530:
  3205  07F6  0C20               	rrf	_isdigit$901,w
  3206  07F7                     l784:
  3207  07F7  0008               	return
  3208  07F8                     __end_of_isdigit:
  3209                           
  3210                           	psect	text5
  3211  0EE6                     __ptext5:	
  3212 ;; *************** function ___wmul *****************
  3213 ;; Defined at:
  3214 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3217 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  product         2    4[BANK0 ] unsigned int 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  2    0[BANK0 ] unsigned int 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3229 ;;      Params:         0       4       0       0       0
  3230 ;;      Locals:         0       2       0       0       0
  3231 ;;      Temps:          0       0       0       0       0
  3232 ;;      Totals:         0       6       0       0       0
  3233 ;;Total ram usage:        6 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    2
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_printf
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function ___wmul
  3245  0EE6                     ___wmul:
  3246  0EE6                     l1534:	
  3247                           ;incstack = 0
  3248                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3249                           
  3250  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0EE8  01A4               	clrf	___wmul@product
  3253  0EE9  01A5               	clrf	___wmul@product+1
  3254  0EEA                     l1536:
  3255  0EEA  1C20               	btfss	___wmul@multiplier,0
  3256  0EEB  2EED               	goto	u1181
  3257  0EEC  2EEE               	goto	u1180
  3258  0EED                     u1181:
  3259  0EED  2EF4               	goto	l331
  3260  0EEE                     u1180:
  3261  0EEE                     l1538:
  3262  0EEE  0822               	movf	___wmul@multiplicand,w
  3263  0EEF  07A4               	addwf	___wmul@product,f
  3264  0EF0  1803               	skipnc
  3265  0EF1  0AA5               	incf	___wmul@product+1,f
  3266  0EF2  0823               	movf	___wmul@multiplicand+1,w
  3267  0EF3  07A5               	addwf	___wmul@product+1,f
  3268  0EF4                     l331:
  3269  0EF4  3001               	movlw	1
  3270  0EF5                     u1195:
  3271  0EF5  1003               	clrc
  3272  0EF6  0DA2               	rlf	___wmul@multiplicand,f
  3273  0EF7  0DA3               	rlf	___wmul@multiplicand+1,f
  3274  0EF8  3EFF               	addlw	-1
  3275  0EF9  1D03               	skipz
  3276  0EFA  2EF5               	goto	u1195
  3277  0EFB                     l1540:
  3278  0EFB  3001               	movlw	1
  3279  0EFC                     u1205:
  3280  0EFC  1003               	clrc
  3281  0EFD  0CA1               	rrf	___wmul@multiplier+1,f
  3282  0EFE  0CA0               	rrf	___wmul@multiplier,f
  3283  0EFF  3EFF               	addlw	-1
  3284  0F00  1D03               	skipz
  3285  0F01  2EFC               	goto	u1205
  3286  0F02                     l1542:
  3287  0F02  0820               	movf	___wmul@multiplier,w
  3288  0F03  0421               	iorwf	___wmul@multiplier+1,w
  3289  0F04  1D03               	btfss	3,2
  3290  0F05  2F07               	goto	u1211
  3291  0F06  2F08               	goto	u1210
  3292  0F07                     u1211:
  3293  0F07  2EEA               	goto	l1536
  3294  0F08                     u1210:
  3295  0F08                     l1544:
  3296  0F08  0825               	movf	___wmul@product+1,w
  3297  0F09  00A1               	movwf	?___wmul+1
  3298  0F0A  0824               	movf	___wmul@product,w
  3299  0F0B  00A0               	movwf	?___wmul
  3300  0F0C                     l333:
  3301  0F0C  0008               	return
  3302  0F0D                     __end_of___wmul:
  3303                           
  3304                           	psect	text6
  3305  0F0D                     __ptext6:	
  3306 ;; *************** function ___lwmod *****************
  3307 ;; Defined at:
  3308 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  divisor         2    8[BANK0 ] unsigned int 
  3311 ;;  dividend        2   10[BANK0 ] unsigned int 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  counter         1   13[BANK0 ] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  2    8[BANK0 ] unsigned int 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         0       4       0       0       0
  3324 ;;      Locals:         0       1       0       0       0
  3325 ;;      Temps:          0       1       0       0       0
  3326 ;;      Totals:         0       6       0       0       0
  3327 ;;Total ram usage:        6 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    2
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_printf
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function ___lwmod
  3339  0F0D                     ___lwmod:
  3340  0F0D                     l1574:	
  3341                           ;incstack = 0
  3342                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3343                           
  3344  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0F0F  0828               	movf	___lwmod@divisor,w
  3347  0F10  0429               	iorwf	___lwmod@divisor+1,w
  3348  0F11  1903               	btfsc	3,2
  3349  0F12  2F14               	goto	u1291
  3350  0F13  2F15               	goto	u1290
  3351  0F14                     u1291:
  3352  0F14  2F44               	goto	l1592
  3353  0F15                     u1290:
  3354  0F15                     l1576:
  3355  0F15  01AD               	clrf	___lwmod@counter
  3356  0F16  0AAD               	incf	___lwmod@counter,f
  3357  0F17  2F23               	goto	l1582
  3358  0F18                     l1578:
  3359  0F18  3001               	movlw	1
  3360  0F19                     u1305:
  3361  0F19  1003               	clrc
  3362  0F1A  0DA8               	rlf	___lwmod@divisor,f
  3363  0F1B  0DA9               	rlf	___lwmod@divisor+1,f
  3364  0F1C  3EFF               	addlw	-1
  3365  0F1D  1D03               	skipz
  3366  0F1E  2F19               	goto	u1305
  3367  0F1F                     l1580:
  3368  0F1F  3001               	movlw	1
  3369  0F20  00AC               	movwf	??___lwmod
  3370  0F21  082C               	movf	??___lwmod,w
  3371  0F22  07AD               	addwf	___lwmod@counter,f
  3372  0F23                     l1582:
  3373  0F23  1FA9               	btfss	___lwmod@divisor+1,7
  3374  0F24  2F26               	goto	u1311
  3375  0F25  2F27               	goto	u1310
  3376  0F26                     u1311:
  3377  0F26  2F18               	goto	l1578
  3378  0F27                     u1310:
  3379  0F27                     l1584:
  3380  0F27  0829               	movf	___lwmod@divisor+1,w
  3381  0F28  022B               	subwf	___lwmod@dividend+1,w
  3382  0F29  1D03               	skipz
  3383  0F2A  2F2D               	goto	u1325
  3384  0F2B  0828               	movf	___lwmod@divisor,w
  3385  0F2C  022A               	subwf	___lwmod@dividend,w
  3386  0F2D                     u1325:
  3387  0F2D  1C03               	skipc
  3388  0F2E  2F30               	goto	u1321
  3389  0F2F  2F31               	goto	u1320
  3390  0F30                     u1321:
  3391  0F30  2F37               	goto	l1588
  3392  0F31                     u1320:
  3393  0F31                     l1586:
  3394  0F31  0828               	movf	___lwmod@divisor,w
  3395  0F32  02AA               	subwf	___lwmod@dividend,f
  3396  0F33  0829               	movf	___lwmod@divisor+1,w
  3397  0F34  1C03               	skipc
  3398  0F35  03AB               	decf	___lwmod@dividend+1,f
  3399  0F36  02AB               	subwf	___lwmod@dividend+1,f
  3400  0F37                     l1588:
  3401  0F37  3001               	movlw	1
  3402  0F38                     u1335:
  3403  0F38  1003               	clrc
  3404  0F39  0CA9               	rrf	___lwmod@divisor+1,f
  3405  0F3A  0CA8               	rrf	___lwmod@divisor,f
  3406  0F3B  3EFF               	addlw	-1
  3407  0F3C  1D03               	skipz
  3408  0F3D  2F38               	goto	u1335
  3409  0F3E                     l1590:
  3410  0F3E  3001               	movlw	1
  3411  0F3F  02AD               	subwf	___lwmod@counter,f
  3412  0F40  1D03               	btfss	3,2
  3413  0F41  2F43               	goto	u1341
  3414  0F42  2F44               	goto	u1340
  3415  0F43                     u1341:
  3416  0F43  2F27               	goto	l1584
  3417  0F44                     u1340:
  3418  0F44                     l1592:
  3419  0F44  082B               	movf	___lwmod@dividend+1,w
  3420  0F45  00A9               	movwf	?___lwmod+1
  3421  0F46  082A               	movf	___lwmod@dividend,w
  3422  0F47  00A8               	movwf	?___lwmod
  3423  0F48                     l613:
  3424  0F48  0008               	return
  3425  0F49                     __end_of___lwmod:
  3426                           
  3427                           	psect	text7
  3428  0F49                     __ptext7:	
  3429 ;; *************** function ___lwdiv *****************
  3430 ;; Defined at:
  3431 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  divisor         2    0[BANK0 ] unsigned int 
  3434 ;;  dividend        2    2[BANK0 ] unsigned int 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  quotient        2    5[BANK0 ] unsigned int 
  3437 ;;  counter         1    7[BANK0 ] unsigned char 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  2    0[BANK0 ] unsigned int 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         0       4       0       0       0
  3448 ;;      Locals:         0       3       0       0       0
  3449 ;;      Temps:          0       1       0       0       0
  3450 ;;      Totals:         0       8       0       0       0
  3451 ;;Total ram usage:        8 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    2
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_printf
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function ___lwdiv
  3463  0F49                     ___lwdiv:
  3464  0F49                     l1548:	
  3465                           ;incstack = 0
  3466                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3467                           
  3468  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0F4B  01A5               	clrf	___lwdiv@quotient
  3471  0F4C  01A6               	clrf	___lwdiv@quotient+1
  3472  0F4D                     l1550:
  3473  0F4D  0820               	movf	___lwdiv@divisor,w
  3474  0F4E  0421               	iorwf	___lwdiv@divisor+1,w
  3475  0F4F  1903               	btfsc	3,2
  3476  0F50  2F52               	goto	u1221
  3477  0F51  2F53               	goto	u1220
  3478  0F52                     u1221:
  3479  0F52  2F8A               	goto	l1570
  3480  0F53                     u1220:
  3481  0F53                     l1552:
  3482  0F53  01A7               	clrf	___lwdiv@counter
  3483  0F54  0AA7               	incf	___lwdiv@counter,f
  3484  0F55  2F61               	goto	l1558
  3485  0F56                     l1554:
  3486  0F56  3001               	movlw	1
  3487  0F57                     u1235:
  3488  0F57  1003               	clrc
  3489  0F58  0DA0               	rlf	___lwdiv@divisor,f
  3490  0F59  0DA1               	rlf	___lwdiv@divisor+1,f
  3491  0F5A  3EFF               	addlw	-1
  3492  0F5B  1D03               	skipz
  3493  0F5C  2F57               	goto	u1235
  3494  0F5D                     l1556:
  3495  0F5D  3001               	movlw	1
  3496  0F5E  00A4               	movwf	??___lwdiv
  3497  0F5F  0824               	movf	??___lwdiv,w
  3498  0F60  07A7               	addwf	___lwdiv@counter,f
  3499  0F61                     l1558:
  3500  0F61  1FA1               	btfss	___lwdiv@divisor+1,7
  3501  0F62  2F64               	goto	u1241
  3502  0F63  2F65               	goto	u1240
  3503  0F64                     u1241:
  3504  0F64  2F56               	goto	l1554
  3505  0F65                     u1240:
  3506  0F65                     l1560:
  3507  0F65  3001               	movlw	1
  3508  0F66                     u1255:
  3509  0F66  1003               	clrc
  3510  0F67  0DA5               	rlf	___lwdiv@quotient,f
  3511  0F68  0DA6               	rlf	___lwdiv@quotient+1,f
  3512  0F69  3EFF               	addlw	-1
  3513  0F6A  1D03               	skipz
  3514  0F6B  2F66               	goto	u1255
  3515  0F6C  0821               	movf	___lwdiv@divisor+1,w
  3516  0F6D  0223               	subwf	___lwdiv@dividend+1,w
  3517  0F6E  1D03               	skipz
  3518  0F6F  2F72               	goto	u1265
  3519  0F70  0820               	movf	___lwdiv@divisor,w
  3520  0F71  0222               	subwf	___lwdiv@dividend,w
  3521  0F72                     u1265:
  3522  0F72  1C03               	skipc
  3523  0F73  2F75               	goto	u1261
  3524  0F74  2F76               	goto	u1260
  3525  0F75                     u1261:
  3526  0F75  2F7D               	goto	l1566
  3527  0F76                     u1260:
  3528  0F76                     l1562:
  3529  0F76  0820               	movf	___lwdiv@divisor,w
  3530  0F77  02A2               	subwf	___lwdiv@dividend,f
  3531  0F78  0821               	movf	___lwdiv@divisor+1,w
  3532  0F79  1C03               	skipc
  3533  0F7A  03A3               	decf	___lwdiv@dividend+1,f
  3534  0F7B  02A3               	subwf	___lwdiv@dividend+1,f
  3535  0F7C                     l1564:
  3536  0F7C  1425               	bsf	___lwdiv@quotient,0
  3537  0F7D                     l1566:
  3538  0F7D  3001               	movlw	1
  3539  0F7E                     u1275:
  3540  0F7E  1003               	clrc
  3541  0F7F  0CA1               	rrf	___lwdiv@divisor+1,f
  3542  0F80  0CA0               	rrf	___lwdiv@divisor,f
  3543  0F81  3EFF               	addlw	-1
  3544  0F82  1D03               	skipz
  3545  0F83  2F7E               	goto	u1275
  3546  0F84                     l1568:
  3547  0F84  3001               	movlw	1
  3548  0F85  02A7               	subwf	___lwdiv@counter,f
  3549  0F86  1D03               	btfss	3,2
  3550  0F87  2F89               	goto	u1281
  3551  0F88  2F8A               	goto	u1280
  3552  0F89                     u1281:
  3553  0F89  2F65               	goto	l1560
  3554  0F8A                     u1280:
  3555  0F8A                     l1570:
  3556  0F8A  0826               	movf	___lwdiv@quotient+1,w
  3557  0F8B  00A1               	movwf	?___lwdiv+1
  3558  0F8C  0825               	movf	___lwdiv@quotient,w
  3559  0F8D  00A0               	movwf	?___lwdiv
  3560  0F8E                     l603:
  3561  0F8E  0008               	return
  3562  0F8F                     __end_of___lwdiv:
  3563                           
  3564                           	psect	text8
  3565  0F8F                     __ptext8:	
  3566 ;; *************** function _inicia_lcd *****************
  3567 ;; Defined at:
  3568 ;;		line 290 in file "main.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0
  3584 ;;      Temps:          0       2       0       0       0
  3585 ;;      Totals:         0       2       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    3
  3589 ;; This function calls:
  3590 ;;		_envia_lcd_comando
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _inicia_lcd
  3598  0F8F                     _inicia_lcd:
  3599  0F8F                     l1596:	
  3600                           ;incstack = 0
  3601                           ; Regs used in _inicia_lcd: [wreg+status,2+status,0+pclath+cstack]
  3602                           
  3603                           
  3604                           ;main.c: 291: }
  3605  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0F91  1007               	bcf	7,0	;volatile
  3608                           
  3609                           ;main.c: 292: void envia_lcd_dado(char valor){
  3610  0F92  1087               	bcf	7,1	;volatile
  3611  0F93                     l1598:
  3612                           
  3613                           ;main.c: 294:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  3614  0F93  3014               	movlw	20
  3615  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0F96  00A3               	movwf	??_inicia_lcd+1
  3618  0F97  3079               	movlw	121
  3619  0F98  00A2               	movwf	??_inicia_lcd
  3620  0F99                     u2467:
  3621  0F99  0BA2               	decfsz	??_inicia_lcd,f
  3622  0F9A  2F99               	goto	u2467
  3623  0F9B  0BA3               	decfsz	??_inicia_lcd+1,f
  3624  0F9C  2F99               	goto	u2467
  3625  0F9D                     l1600:
  3626                           
  3627                           ;main.c: 295:     PORTD = valor;
  3628  0F9D  3030               	movlw	48
  3629  0F9E  120A  158A  268A  120A  158A  	fcall	_envia_lcd_comando
  3630  0FA3                     l1602:
  3631                           
  3632                           ;main.c: 296:     PORTCbits.RC1 = 1;
  3633  0FA3  3007               	movlw	7
  3634  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0FA6  00A3               	movwf	??_inicia_lcd+1
  3637  0FA7  307C               	movlw	124
  3638  0FA8  00A2               	movwf	??_inicia_lcd
  3639  0FA9                     u2477:
  3640  0FA9  0BA2               	decfsz	??_inicia_lcd,f
  3641  0FAA  2FA9               	goto	u2477
  3642  0FAB  0BA3               	decfsz	??_inicia_lcd+1,f
  3643  0FAC  2FA9               	goto	u2477
  3644  0FAD  0000               	nop
  3645                           
  3646                           ;main.c: 297:     PORTCbits.RC1 = 0;
  3647  0FAE  3030               	movlw	48
  3648  0FAF  120A  158A  268A  120A  158A  	fcall	_envia_lcd_comando
  3649  0FB4                     l1604:
  3650                           
  3651                           ;main.c: 298: }
  3652  0FB4  3020               	movlw	32
  3653  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  3654  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  3655  0FB7  00A2               	movwf	??_inicia_lcd
  3656  0FB8                     u2487:
  3657  0FB8  0BA2               	decfsz	??_inicia_lcd,f
  3658  0FB9  2FB8               	goto	u2487
  3659  0FBA  0000               	nop
  3660  0FBB                     l1606:
  3661                           
  3662                           ;main.c: 299: void putch(char p){
  3663  0FBB  3030               	movlw	48
  3664  0FBC  120A  158A  268A  120A  158A  	fcall	_envia_lcd_comando
  3665                           
  3666                           ;main.c: 300:     envia_lcd_dado(p);
  3667  0FC1  300C               	movlw	12
  3668  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0FC4  00A2               	movwf	??_inicia_lcd
  3671  0FC5                     u2497:
  3672  0FC5  0BA2               	decfsz	??_inicia_lcd,f
  3673  0FC6  2FC5               	goto	u2497
  3674  0FC7  0000               	nop
  3675  0FC8                     l1608:
  3676  0FC8  3038               	movlw	56
  3677  0FC9  120A  158A  268A  120A  158A  	fcall	_envia_lcd_comando
  3678  0FCE                     l1610:
  3679  0FCE  300C               	movlw	12
  3680  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0FD1  00A2               	movwf	??_inicia_lcd
  3683  0FD2                     u2507:
  3684  0FD2  0BA2               	decfsz	??_inicia_lcd,f
  3685  0FD3  2FD2               	goto	u2507
  3686  0FD4  0000               	nop
  3687  0FD5  3001               	movlw	1
  3688  0FD6  120A  158A  268A  120A  158A  	fcall	_envia_lcd_comando
  3689  0FDB                     l1612:
  3690  0FDB  3003               	movlw	3
  3691  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  3692  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  3693  0FDE  00A3               	movwf	??_inicia_lcd+1
  3694  0FDF  3097               	movlw	151
  3695  0FE0  00A2               	movwf	??_inicia_lcd
  3696  0FE1                     u2517:
  3697  0FE1  0BA2               	decfsz	??_inicia_lcd,f
  3698  0FE2  2FE1               	goto	u2517
  3699  0FE3  0BA3               	decfsz	??_inicia_lcd+1,f
  3700  0FE4  2FE1               	goto	u2517
  3701  0FE5                     l1614:
  3702  0FE5  300C               	movlw	12
  3703  0FE6  120A  158A  268A  120A  158A  	fcall	_envia_lcd_comando
  3704  0FEB  300C               	movlw	12
  3705  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3706  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3707  0FEE  00A2               	movwf	??_inicia_lcd
  3708  0FEF                     u2527:
  3709  0FEF  0BA2               	decfsz	??_inicia_lcd,f
  3710  0FF0  2FEF               	goto	u2527
  3711  0FF1  0000               	nop
  3712  0FF2                     l1616:
  3713  0FF2  3006               	movlw	6
  3714  0FF3  120A  158A  268A  120A  158A  	fcall	_envia_lcd_comando
  3715  0FF8                     l1618:
  3716  0FF8  300C               	movlw	12
  3717  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0FFB  00A2               	movwf	??_inicia_lcd
  3720  0FFC                     u2537:
  3721  0FFC  0BA2               	decfsz	??_inicia_lcd,f
  3722  0FFD  2FFC               	goto	u2537
  3723  0FFE  0000               	nop
  3724  0FFF                     l173:
  3725  0FFF  0008               	return
  3726  1000                     __end_of_inicia_lcd:
  3727                           
  3728                           	psect	text9
  3729  0E8A                     __ptext9:	
  3730 ;; *************** function _envia_lcd_comando *****************
  3731 ;; Defined at:
  3732 ;;		line 311 in file "main.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  RS              1    wreg     unsigned char 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  RS              1    1[BANK0 ] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3746 ;;      Params:         0       0       0       0       0
  3747 ;;      Locals:         0       1       0       0       0
  3748 ;;      Temps:          0       1       0       0       0
  3749 ;;      Totals:         0       2       0       0       0
  3750 ;;Total ram usage:        2 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    2
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_main
  3757 ;;		_inicia_lcd
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function _envia_lcd_comando
  3763  0E8A                     _envia_lcd_comando:
  3764                           
  3765                           ;incstack = 0
  3766                           ; Regs used in _envia_lcd_comando: [wreg]
  3767                           ;envia_lcd_comando@RS stored from wreg
  3768  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  3770  0E8C  00A1               	movwf	envia_lcd_comando@RS
  3771  0E8D                     l1512:
  3772  0E8D  1007               	bcf	7,0	;volatile
  3773  0E8E                     l1514:
  3774  0E8E  3020               	movlw	32
  3775  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0E91  00A0               	movwf	??_envia_lcd_comando
  3778  0E92                     u2547:
  3779  0E92  0BA0               	decfsz	??_envia_lcd_comando,f
  3780  0E93  2E92               	goto	u2547
  3781  0E94  0000               	nop
  3782  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0E97  0821               	movf	envia_lcd_comando@RS,w
  3785  0E98  0088               	movwf	8	;volatile
  3786  0E99                     l1516:
  3787  0E99  1487               	bsf	7,1	;volatile
  3788  0E9A                     l1518:
  3789  0E9A  1087               	bcf	7,1	;volatile
  3790  0E9B                     l176:
  3791  0E9B  0008               	return
  3792  0E9C                     __end_of_envia_lcd_comando:
  3793                           
  3794                           	psect	text10
  3795  0619                     __ptext10:	
  3796 ;; *************** function _Interrupt *****************
  3797 ;; Defined at:
  3798 ;;		line 234 in file "main.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  voltage         2   10[COMMON] unsigned int 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       0       0       0       0
  3813 ;;      Locals:         2       0       0       0       0
  3814 ;;      Temps:          4       0       0       0       0
  3815 ;;      Totals:         6       0       0       0       0
  3816 ;;Total ram usage:        6 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    1
  3819 ;; This function calls:
  3820 ;;		i1___wmul
  3821 ;; This function is called by:
  3822 ;;		Interrupt level 1
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function _Interrupt
  3828  0619                     _Interrupt:
  3829  0619                     i1l2026:
  3830                           
  3831                           ;main.c: 236:             }else if (min == min_stop && hora == hora_stop){
  3832  0619  1283               	bcf	3,5	;RP0=0, select bank0
  3833  061A  1303               	bcf	3,6	;RP1=0, select bank0
  3834  061B  1C0C               	btfss	12,0	;volatile
  3835  061C  2E1E               	goto	u217_21
  3836  061D  2E1F               	goto	u217_20
  3837  061E                     u217_21:
  3838  061E  2EFA               	goto	i1l170
  3839  061F                     u217_20:
  3840  061F                     i1l2028:
  3841                           
  3842                           ;main.c: 238:             }
  3843  061F  3000               	movlw	0
  3844  0620  027D               	subwf	_cont+1,w
  3845  0621  3003               	movlw	3
  3846  0622  1903               	skipnz
  3847  0623  027C               	subwf	_cont,w
  3848  0624  1C03               	skipc
  3849  0625  2E27               	goto	u218_21
  3850  0626  2E28               	goto	u218_20
  3851  0627                     u218_21:
  3852  0627  2E57               	goto	i1l2050
  3853  0628                     u218_20:
  3854  0628                     i1l2030:
  3855                           
  3856                           ;main.c: 239:         if (check_time == 1){
  3857  0628  3001               	movlw	1
  3858  0629  07D8               	addwf	_seg,f
  3859  062A  1803               	skipnc
  3860  062B  0AD9               	incf	_seg+1,f
  3861  062C  3000               	movlw	0
  3862  062D  07D9               	addwf	_seg+1,f
  3863  062E                     i1l2032:
  3864                           
  3865                           ;main.c: 240:             if(temp >= max_temp +5){
  3866  062E  01FC               	clrf	_cont
  3867  062F  01FD               	clrf	_cont+1
  3868  0630                     i1l2034:
  3869                           
  3870                           ;main.c: 241:                 PORTAbits.RA3 = 0;
  3871  0630  303C               	movlw	60
  3872  0631  0658               	xorwf	_seg,w
  3873  0632  0459               	iorwf	_seg+1,w
  3874  0633  1D03               	btfss	3,2
  3875  0634  2E36               	goto	u219_21
  3876  0635  2E37               	goto	u219_20
  3877  0636                     u219_21:
  3878  0636  2E3F               	goto	i1l2040
  3879  0637                     u219_20:
  3880  0637                     i1l2036:
  3881                           
  3882                           ;main.c: 242:                 aquecedor = 0;
  3883  0637  01D8               	clrf	_seg
  3884  0638  01D9               	clrf	_seg+1
  3885  0639                     i1l2038:
  3886                           
  3887                           ;main.c: 243:             }else if(temp <= max_temp -5){
  3888  0639  3001               	movlw	1
  3889  063A  07D6               	addwf	_min,f
  3890  063B  1803               	skipnc
  3891  063C  0AD7               	incf	_min+1,f
  3892  063D  3000               	movlw	0
  3893  063E  07D7               	addwf	_min+1,f
  3894  063F                     i1l2040:
  3895                           
  3896                           ;main.c: 245:                 aquecedor = 1;
  3897  063F  303C               	movlw	60
  3898  0640  0656               	xorwf	_min,w
  3899  0641  0457               	iorwf	_min+1,w
  3900  0642  1D03               	btfss	3,2
  3901  0643  2E45               	goto	u220_21
  3902  0644  2E46               	goto	u220_20
  3903  0645                     u220_21:
  3904  0645  2E4E               	goto	i1l2046
  3905  0646                     u220_20:
  3906  0646                     i1l2042:
  3907                           
  3908                           ;main.c: 246:             }
  3909  0646  01D6               	clrf	_min
  3910  0647  01D7               	clrf	_min+1
  3911  0648                     i1l2044:
  3912                           
  3913                           ;main.c: 247:         }else{
  3914  0648  3001               	movlw	1
  3915  0649  07E0               	addwf	_hora,f
  3916  064A  1803               	skipnc
  3917  064B  0AE1               	incf	_hora+1,f
  3918  064C  3000               	movlw	0
  3919  064D  07E1               	addwf	_hora+1,f
  3920  064E                     i1l2046:
  3921                           
  3922                           ;main.c: 249:             check_time = 0;
  3923  064E  3018               	movlw	24
  3924  064F  0660               	xorwf	_hora,w
  3925  0650  0461               	iorwf	_hora+1,w
  3926  0651  1D03               	btfss	3,2
  3927  0652  2E54               	goto	u221_21
  3928  0653  2E55               	goto	u221_20
  3929  0654                     u221_21:
  3930  0654  2E57               	goto	i1l2050
  3931  0655                     u221_20:
  3932  0655                     i1l2048:
  3933                           
  3934                           ;main.c: 250:         }
  3935  0655  01E0               	clrf	_hora
  3936  0656  01E1               	clrf	_hora+1
  3937  0657                     i1l2050:
  3938                           
  3939                           ;main.c: 253:         if (PORTAbits.RA1 == 1){
  3940  0657  3001               	movlw	1
  3941  0658  07FC               	addwf	_cont,f
  3942  0659  1803               	skipnc
  3943  065A  0AFD               	incf	_cont+1,f
  3944  065B  3000               	movlw	0
  3945  065C  07FD               	addwf	_cont+1,f
  3946  065D                     i1l2052:
  3947                           
  3948                           ;main.c: 256:             nivel = 0;
  3949  065D  081E               	movf	30,w	;volatile
  3950  065E  00FB               	movwf	Interrupt@voltage+1
  3951  065F  1683               	bsf	3,5	;RP0=1, select bank1
  3952  0660  1303               	bcf	3,6	;RP1=0, select bank1
  3953  0661  081E               	movf	30,w	;volatile
  3954  0662  00FA               	movwf	Interrupt@voltage
  3955  0663                     i1l2054:
  3956                           
  3957                           ;main.c: 257:             check_time = 0;
  3958  0663  087B               	movf	Interrupt@voltage+1,w
  3959  0664  00F1               	movwf	i1___wmul@multiplier+1
  3960  0665  087A               	movf	Interrupt@voltage,w
  3961  0666  00F0               	movwf	i1___wmul@multiplier
  3962  0667  307D               	movlw	125
  3963  0668  00F2               	movwf	i1___wmul@multiplicand
  3964  0669  3000               	movlw	0
  3965  066A  00F3               	movwf	i1___wmul@multiplicand+1
  3966  066B  120A  158A  26C1  120A  118A  	fcall	i1___wmul
  3967  0670  0870               	movf	?i1___wmul,w
  3968  0671  00F6               	movwf	??_Interrupt
  3969  0672  0871               	movf	?i1___wmul+1,w
  3970  0673  00F7               	movwf	??_Interrupt+1
  3971  0674  0877               	movf	??_Interrupt+1,w
  3972  0675  00F6               	movwf	??_Interrupt
  3973  0676  01F7               	clrf	??_Interrupt+1
  3974  0677  0876               	movf	??_Interrupt,w
  3975  0678  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0679  1303               	bcf	3,6	;RP1=0, select bank0
  3977  067A  00D0               	movwf	_temp
  3978  067B  0877               	movf	??_Interrupt+1,w
  3979  067C  00D1               	movwf	_temp+1
  3980  067D                     i1l2056:
  3981                           
  3982                           ;main.c: 260:         PIR1bits.TMR1IF = 0;
  3983  067D  0855               	movf	_min_start+1,w
  3984  067E  0657               	xorwf	_min+1,w
  3985  067F  1D03               	skipz
  3986  0680  2E83               	goto	u222_25
  3987  0681  0854               	movf	_min_start,w
  3988  0682  0656               	xorwf	_min,w
  3989  0683                     u222_25:
  3990  0683  1D03               	skipz
  3991  0684  2E86               	goto	u222_21
  3992  0685  2E87               	goto	u222_20
  3993  0686                     u222_21:
  3994  0686  2E96               	goto	i1l2062
  3995  0687                     u222_20:
  3996  0687                     i1l2058:
  3997  0687  085F               	movf	_hora_start+1,w
  3998  0688  0661               	xorwf	_hora+1,w
  3999  0689  1D03               	skipz
  4000  068A  2E8D               	goto	u223_25
  4001  068B  085E               	movf	_hora_start,w
  4002  068C  0660               	xorwf	_hora,w
  4003  068D                     u223_25:
  4004  068D  1D03               	skipz
  4005  068E  2E90               	goto	u223_21
  4006  068F  2E91               	goto	u223_20
  4007  0690                     u223_21:
  4008  0690  2E96               	goto	i1l2062
  4009  0691                     u223_20:
  4010  0691                     i1l2060:
  4011                           
  4012                           ;main.c: 261:         TMR1 = 3036;
  4013  0691  3001               	movlw	1
  4014  0692  00CC               	movwf	_check_time
  4015  0693  3000               	movlw	0
  4016  0694  00CD               	movwf	_check_time+1
  4017                           
  4018                           ;main.c: 262:     }
  4019  0695  2EAC               	goto	i1l2068
  4020  0696                     i1l2062:
  4021  0696  0853               	movf	_min_stop+1,w
  4022  0697  0657               	xorwf	_min+1,w
  4023  0698  1D03               	skipz
  4024  0699  2E9C               	goto	u224_25
  4025  069A  0852               	movf	_min_stop,w
  4026  069B  0656               	xorwf	_min,w
  4027  069C                     u224_25:
  4028  069C  1D03               	skipz
  4029  069D  2E9F               	goto	u224_21
  4030  069E  2EA0               	goto	u224_20
  4031  069F                     u224_21:
  4032  069F  2EAC               	goto	i1l2068
  4033  06A0                     u224_20:
  4034  06A0                     i1l2064:
  4035  06A0  085D               	movf	_hora_stop+1,w
  4036  06A1  0661               	xorwf	_hora+1,w
  4037  06A2  1D03               	skipz
  4038  06A3  2EA6               	goto	u225_25
  4039  06A4  085C               	movf	_hora_stop,w
  4040  06A5  0660               	xorwf	_hora,w
  4041  06A6                     u225_25:
  4042  06A6  1D03               	skipz
  4043  06A7  2EA9               	goto	u225_21
  4044  06A8  2EAA               	goto	u225_20
  4045  06A9                     u225_21:
  4046  06A9  2EAC               	goto	i1l2068
  4047  06AA                     u225_20:
  4048  06AA                     i1l2066:
  4049                           
  4050                           ;main.c: 263: }
  4051  06AA  01CC               	clrf	_check_time
  4052  06AB  01CD               	clrf	_check_time+1
  4053  06AC                     i1l2068:
  4054                           
  4055                           ;main.c: 265:     PORTCbits.RC0 = 0;
  4056  06AC  034C               	decf	_check_time,w
  4057  06AD  044D               	iorwf	_check_time+1,w
  4058  06AE  1D03               	btfss	3,2
  4059  06AF  2EB1               	goto	u226_21
  4060  06B0  2EB2               	goto	u226_20
  4061  06B1                     u226_21:
  4062  06B1  2EE0               	goto	i1l162
  4063  06B2                     u226_20:
  4064  06B2                     i1l2070:
  4065                           
  4066                           ;main.c: 266:     PORTCbits.RC1 = 0;
  4067  06B2  085A               	movf	_max_temp,w
  4068  06B3  3E05               	addlw	5
  4069  06B4  00F6               	movwf	??_Interrupt
  4070  06B5  085B               	movf	_max_temp+1,w
  4071  06B6  1803               	skipnc
  4072  06B7  3E01               	addlw	1
  4073  06B8  3E00               	addlw	0
  4074  06B9  00F7               	movwf	??_Interrupt+1
  4075  06BA  0877               	movf	??_Interrupt+1,w
  4076  06BB  0251               	subwf	_temp+1,w
  4077  06BC  1D03               	skipz
  4078  06BD  2EC0               	goto	u227_25
  4079  06BE  0876               	movf	??_Interrupt,w
  4080  06BF  0250               	subwf	_temp,w
  4081  06C0                     u227_25:
  4082  06C0  1C03               	skipc
  4083  06C1  2EC3               	goto	u227_21
  4084  06C2  2EC4               	goto	u227_20
  4085  06C3                     u227_21:
  4086  06C3  2EC8               	goto	i1l2076
  4087  06C4                     u227_20:
  4088  06C4                     i1l2072:
  4089                           
  4090                           ;main.c: 267: 
  4091  06C4  1185               	bcf	5,3	;volatile
  4092  06C5                     i1l2074:
  4093                           
  4094                           ;main.c: 268:     _delay((unsigned long)((15)*(4000000/4000.0)));
  4095  06C5  01CA               	clrf	_aquecedor
  4096  06C6  01CB               	clrf	_aquecedor+1
  4097                           
  4098                           ;main.c: 269:     envia_lcd_comando(0x30);
  4099  06C7  2EE3               	goto	i1l2084
  4100  06C8                     i1l2076:
  4101  06C8  085A               	movf	_max_temp,w
  4102  06C9  3EFB               	addlw	251
  4103  06CA  00F6               	movwf	??_Interrupt
  4104  06CB  085B               	movf	_max_temp+1,w
  4105  06CC  1803               	skipnc
  4106  06CD  3E01               	addlw	1
  4107  06CE  3EFF               	addlw	255
  4108  06CF  00F7               	movwf	??_Interrupt+1
  4109  06D0  0851               	movf	_temp+1,w
  4110  06D1  0277               	subwf	??_Interrupt+1,w
  4111  06D2  1D03               	skipz
  4112  06D3  2ED6               	goto	u228_25
  4113  06D4  0850               	movf	_temp,w
  4114  06D5  0276               	subwf	??_Interrupt,w
  4115  06D6                     u228_25:
  4116  06D6  1C03               	skipc
  4117  06D7  2ED9               	goto	u228_21
  4118  06D8  2EDA               	goto	u228_20
  4119  06D9                     u228_21:
  4120  06D9  2EE3               	goto	i1l2084
  4121  06DA                     u228_20:
  4122  06DA                     i1l2078:
  4123                           
  4124                           ;main.c: 270:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4125  06DA  1585               	bsf	5,3	;volatile
  4126  06DB                     i1l2080:
  4127                           
  4128                           ;main.c: 271:     envia_lcd_comando(0x30);
  4129  06DB  3001               	movlw	1
  4130  06DC  00CA               	movwf	_aquecedor
  4131  06DD  3000               	movlw	0
  4132  06DE  00CB               	movwf	_aquecedor+1
  4133  06DF  2EE3               	goto	i1l2084
  4134  06E0                     i1l162:
  4135                           
  4136                           ;main.c: 274:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4137  06E0  1185               	bcf	5,3	;volatile
  4138  06E1                     i1l2082:
  4139                           
  4140                           ;main.c: 275: 
  4141  06E1  01CC               	clrf	_check_time
  4142  06E2  01CD               	clrf	_check_time+1
  4143  06E3                     i1l2084:
  4144                           
  4145                           ;main.c: 279:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4146  06E3  1C85               	btfss	5,1	;volatile
  4147  06E4  2EE6               	goto	u229_21
  4148  06E5  2EE7               	goto	u229_20
  4149  06E6                     u229_21:
  4150  06E6  2EEC               	goto	i1l167
  4151  06E7                     u229_20:
  4152  06E7                     i1l2086:
  4153                           
  4154                           ;main.c: 280:     envia_lcd_comando(0x0C);
  4155  06E7  3001               	movlw	1
  4156  06E8  00C8               	movwf	_nivel
  4157  06E9  3000               	movlw	0
  4158  06EA  00C9               	movwf	_nivel+1
  4159                           
  4160                           ;main.c: 281:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4161  06EB  2EF5               	goto	i1l2092
  4162  06EC                     i1l167:
  4163  06EC  1885               	btfsc	5,1	;volatile
  4164  06ED  2EEF               	goto	u230_21
  4165  06EE  2EF0               	goto	u230_20
  4166  06EF                     u230_21:
  4167  06EF  2EF5               	goto	i1l2092
  4168  06F0                     u230_20:
  4169  06F0                     i1l2088:
  4170                           
  4171                           ;main.c: 282:     envia_lcd_comando(0x06);
  4172  06F0  01C8               	clrf	_nivel
  4173  06F1  01C9               	clrf	_nivel+1
  4174                           
  4175                           ;main.c: 283:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4176  06F2  01CC               	clrf	_check_time
  4177  06F3  01CD               	clrf	_check_time+1
  4178  06F4                     i1l2090:
  4179                           
  4180                           ;main.c: 284: }
  4181  06F4  1185               	bcf	5,3	;volatile
  4182  06F5                     i1l2092:
  4183                           
  4184                           ;main.c: 286:     PORTCbits.RC0 = 0;
  4185  06F5  100C               	bcf	12,0	;volatile
  4186  06F6                     i1l2094:
  4187                           
  4188                           ;main.c: 287:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  4189  06F6  300B               	movlw	11
  4190  06F7  008F               	movwf	15	;volatile
  4191  06F8  30DC               	movlw	220
  4192  06F9  008E               	movwf	14	;volatile
  4193  06FA                     i1l170:
  4194  06FA  0879               	movf	??_Interrupt+3,w
  4195  06FB  008A               	movwf	10
  4196  06FC  0E78               	swapf	??_Interrupt+2,w
  4197  06FD  0083               	movwf	3
  4198  06FE  0EFE               	swapf	btemp,f
  4199  06FF  0E7E               	swapf	btemp,w
  4200  0700  0009               	retfie
  4201  0701                     __end_of_Interrupt:
  4202                           
  4203                           	psect	intentry
  4204  0004                     __pintentry:	
  4205                           ;incstack = 0
  4206                           ; Regs used in _Interrupt: [wreg+status,2+status,0+pclath+cstack]
  4207                           
  4208  0004                     interrupt_function:
  4209  007E                     saved_w	set	btemp
  4210  0004  00FE               	movwf	btemp
  4211  0005  0E03               	swapf	3,w
  4212  0006  00F8               	movwf	??_Interrupt+2
  4213  0007  080A               	movf	10,w
  4214  0008  00F9               	movwf	??_Interrupt+3
  4215  0009  120A  118A  2E19   	ljmp	_Interrupt
  4216                           
  4217                           	psect	text11
  4218  0EC1                     __ptext11:	
  4219 ;; *************** function i1___wmul *****************
  4220 ;; Defined at:
  4221 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  multiplier      2    0[COMMON] unsigned int 
  4224 ;;  multiplicand    2    2[COMMON] unsigned int 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  product         2    4[COMMON] unsigned int 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2    0[COMMON] unsigned int 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4236 ;;      Params:         4       0       0       0       0
  4237 ;;      Locals:         2       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0
  4239 ;;      Totals:         6       0       0       0       0
  4240 ;;Total ram usage:        6 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_Interrupt
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function i1___wmul
  4251  0EC1                     i1___wmul:
  4252  0EC1                     i1l1746:	
  4253                           ;incstack = 0
  4254                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4255                           
  4256  0EC1  01F4               	clrf	i1___wmul@product
  4257  0EC2  01F5               	clrf	i1___wmul@product+1
  4258  0EC3                     i1l1748:
  4259  0EC3  1C70               	btfss	i1___wmul@multiplier,0
  4260  0EC4  2EC6               	goto	u157_21
  4261  0EC5  2EC7               	goto	u157_20
  4262  0EC6                     u157_21:
  4263  0EC6  2ECD               	goto	i1l331
  4264  0EC7                     u157_20:
  4265  0EC7                     i1l1750:
  4266  0EC7  0872               	movf	i1___wmul@multiplicand,w
  4267  0EC8  07F4               	addwf	i1___wmul@product,f
  4268  0EC9  1803               	skipnc
  4269  0ECA  0AF5               	incf	i1___wmul@product+1,f
  4270  0ECB  0873               	movf	i1___wmul@multiplicand+1,w
  4271  0ECC  07F5               	addwf	i1___wmul@product+1,f
  4272  0ECD                     i1l331:
  4273  0ECD  3001               	movlw	1
  4274  0ECE                     u158_25:
  4275  0ECE  1003               	clrc
  4276  0ECF  0DF2               	rlf	i1___wmul@multiplicand,f
  4277  0ED0  0DF3               	rlf	i1___wmul@multiplicand+1,f
  4278  0ED1  3EFF               	addlw	-1
  4279  0ED2  1D03               	skipz
  4280  0ED3  2ECE               	goto	u158_25
  4281  0ED4                     i1l1752:
  4282  0ED4  3001               	movlw	1
  4283  0ED5                     u159_25:
  4284  0ED5  1003               	clrc
  4285  0ED6  0CF1               	rrf	i1___wmul@multiplier+1,f
  4286  0ED7  0CF0               	rrf	i1___wmul@multiplier,f
  4287  0ED8  3EFF               	addlw	-1
  4288  0ED9  1D03               	skipz
  4289  0EDA  2ED5               	goto	u159_25
  4290  0EDB                     i1l1754:
  4291  0EDB  0870               	movf	i1___wmul@multiplier,w
  4292  0EDC  0471               	iorwf	i1___wmul@multiplier+1,w
  4293  0EDD  1D03               	btfss	3,2
  4294  0EDE  2EE0               	goto	u160_21
  4295  0EDF  2EE1               	goto	u160_20
  4296  0EE0                     u160_21:
  4297  0EE0  2EC3               	goto	i1l1748
  4298  0EE1                     u160_20:
  4299  0EE1                     i1l1756:
  4300  0EE1  0875               	movf	i1___wmul@product+1,w
  4301  0EE2  00F1               	movwf	?i1___wmul+1
  4302  0EE3  0874               	movf	i1___wmul@product,w
  4303  0EE4  00F0               	movwf	?i1___wmul
  4304  0EE5                     i1l333:
  4305  0EE5  0008               	return
  4306  0EE6                     __end_ofi1___wmul:
  4307  007E                     btemp	set	126	;btemp
  4308  007E                     wtemp0	set	126
  4309                           
  4310                           	psect	config
  4311                           
  4312                           ;Config register CONFIG1 @ 0x2007
  4313                           ;	Oscillator Selection bits
  4314                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4315                           ;	Watchdog Timer Enable bit
  4316                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4317                           ;	Power-up Timer Enable bit
  4318                           ;	PWRTE = OFF, PWRT disabled
  4319                           ;	RE3/MCLR pin function select bit
  4320                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4321                           ;	Code Protection bit
  4322                           ;	CP = OFF, Program memory code protection is disabled
  4323                           ;	Data Code Protection bit
  4324                           ;	CPD = OFF, Data memory code protection is disabled
  4325                           ;	Brown Out Reset Selection bits
  4326                           ;	BOREN = ON, BOR enabled
  4327                           ;	Internal External Switchover bit
  4328                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4329                           ;	Fail-Safe Clock Monitor Enabled bit
  4330                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4331                           ;	Low Voltage Programming Enable bit
  4332                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4333                           ;	In-Circuit Debugger Mode bit
  4334                           ;	DEBUG = 0x1, unprogrammed default
  4335  2007                     	org	8199
  4336  2007  2FF4               	dw	12276
  4337                           
  4338                           ;Config register CONFIG2 @ 0x2008
  4339                           ;	Brown-out Reset Selection bit
  4340                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4341                           ;	Flash Program Memory Self Write Enable bits
  4342                           ;	WRT = OFF, Write protection off
  4343  2008                     	org	8200
  4344  2008  3FFF               	dw	16383

Data Sizes:
    Strings     211
    Constant    10
    Data        8
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     38      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> printf@c(BANK0[1]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[19]), STR_9(CODE[17]), 
		 -> STR_8(CODE[23]), STR_7(CODE[18]), STR_6(CODE[19]), STR_5(CODE[18]), 
		 -> STR_4(CODE[23]), STR_3(CODE[21]), STR_2(CODE[18]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupt in COMMON

    _Interrupt->i1___wmul

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_envia_lcd_dado
    ___lwmod->___lwdiv
    _inicia_lcd->_envia_lcd_comando

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2453
                                             35 BANK0      3     3      0
                  _envia_lcd_comando
                         _inicia_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              25    19      6    2409
                                             14 BANK0     21    15      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              2 BANK0      1     1      0
                     _envia_lcd_dado
 ---------------------------------------------------------------------------------
 (3) _envia_lcd_dado                                       2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     344
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _inicia_lcd                                           2     2      0      22
                                              2 BANK0      2     2      0
                  _envia_lcd_comando
 ---------------------------------------------------------------------------------
 (2) _envia_lcd_comando                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            6     6      0     167
                                              6 COMMON     6     6      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _envia_lcd_comando
   _inicia_lcd
     _envia_lcd_comando
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _envia_lcd_dado

 _Interrupt (ROOT)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      50      12        0.0%
ABS                  0      0      50       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Dec 02 10:52:12 2020

                         pc 0002                          fsr 0004         ___wmul@multiplicand 0022  
          i1___wmul@product 0074                         l101 012F                         l111 01E8  
                       l104 0156                         l122 029A                         l114 0210  
                       l140 03A2                         l124 02B7                         l116 023A  
                       l109 01CB                         l310 054E                         l142 03BE  
                       l135 035B                         l127 02DF                         l137 0378  
                       l129 02FB                         l331 0EF4                         l173 0FFF  
                       l333 0F0C                         l182 0E89                         l327 0618  
                       l176 0E9B                         l282 040D                         l603 0F8E  
                       l179 0EAD                         l613 0F48                         l784 07F7  
                       _RB1 0031                         _RB2 0032                         _min 0056  
                       _seg 0058                         fsr0 0004                         indf 0000  
                      l2000 03A6                        l2010 03C9                        l2002 03AC  
                      l2012 03D8                        l2004 03BB                        l2008 03C2  
                      l2018 03DB                        l1510 0EAC                        l1512 0E8D  
                      l1600 0F9D                        l1504 0E9F                        l1520 0E83  
                      l1514 0E8E                        l1610 0FCE                        l1602 0FA3  
                      l1530 07F6                        l1522 07E7                        l1506 0EA0  
                      l2170 04E6                        l1516 0E99                        l1612 0FDB  
                      l1604 0FB4                        l1540 0EFB                        l1524 07E8  
                      l1508 0EAB                        l1700 0548                        l1620 03F7  
                      l1518 0E9A                        l1614 0FE5                        l1606 0FBB  
                      l1550 0F4D                        l1542 0F02                        l1534 0EE6  
                      l1526 07EE                        l1710 0573                        l1702 0559  
                      l1622 03FC                        l2166 03E0                        l1616 0FF2  
                      l1608 0FC8                        l1560 0F65                        l1552 0F53  
                      l1544 0F08                        l1536 0EEA                        l1528 07F4  
                      l1720 059C                        l1712 0579                        l1704 0565  
                      l1640 044E                        l2168 0420                        l1632 0412  
                      l1624 0402                        l1800 0056                        l1618 0FF8  
                      l1562 0F76                        l1554 0F56                        l1570 0F8A  
                      l1538 0EEE                        l1730 05C3                        l1722 05A2  
                      l1714 0581                        l1706 0569                        l1650 0486  
                      l1642 0461                        l1634 0425                        l1626 0409  
                      l1810 005D                        l1802 0057                        l1564 0F7C  
                      l1556 0F5D                        l1548 0F49                        l1580 0F1F  
                      l1732 05F3                        l1724 05B0                        l1716 0587  
                      l1708 056D                        l1660 04AF                        l1652 0489  
                      l1644 0465                        l1636 0435                        l1628 040E  
                      l1900 01F3                        l1820 0071                        l1812 005E  
                      l1804 0058                        l1566 0F7D                        l1558 0F61  
                      l1590 0F3E                        l1582 0F23                        l1574 0F0D  
                      l1734 05F9                        l1726 05B6                        l1718 0596  
                      l1662 04BE                        l1654 048F                        l1646 0476  
                      l1638 0439                        l1910 0214                        l1902 01F5  
                      l1830 009A                        l1822 0077                        l1814 0062  
                      l1806 005B                        l1568 0F84                        l1584 0F27  
                      l1576 0F15                        l1592 0F44                        l1728 05BC  
                      l1680 0504                        l1664 04C5                        l1656 04A0  
                      l1648 047F                        l1672 04D2                        l1736 0604  
                      l1920 0245                        l1912 021A                        l1904 0203  
                      l1840 00C5                        l1832 00AA                        l1824 007D  
                      l1816 0067                        l1808 005C                        l1760 002B  
                      l1586 0F31                        l1578 0F18                        l1690 0516  
                      l1682 0508                        l1674 04F4                        l1666 04C9  
                      l1658 04A9                        l1930 0263                        l1922 0254  
                      l1914 0229                        l1906 0209                        l1850 00F2  
                      l1842 00CB                        l1834 00B2                        l1826 008E  
                      l1818 006D                        l1770 0037                        l1762 0031  
                      l1596 0F8F                        l1588 0F37                        l1684 050D  
                      l1676 04FC                        l1668 04CD                        l1940 02A4  
                      l1932 0279                        l1916 022B                        l1860 0133  
                      l1852 00F8                        l1844 00D1                        l1836 00B8  
                      l1828 0094                        l1780 0046                        l1772 003C  
                      l1764 0032                        l1598 0F93                        l1694 0532  
                      l1686 050F                        l1678 0500                        l1950 02D8  
                      l1942 02BB                        l1934 027F                        l1926 0257  
                      l1918 023E                        l1862 0139                        l1854 010E  
                      l1846 00D7                        l1838 00BF                        l1790 004D  
                      l1782 0047                        l1774 003D                        l1766 0033  
                      l1696 053C                        l1944 02C2                        l1936 0285  
                      l1928 025D                        l1880 017F                        l1872 015A  
                      l1864 013B                        l1856 0114                        l1848 00EC  
                      l1792 0050                        l1784 0048                        l1776 0040  
                      l1768 0036                        l1698 0542                        l1970 0318  
                      l1962 02FF                        l1954 02E3                        l1946 02C4  
                      l1938 029E                        l1890 01B0                        l1882 0184  
                      l1874 0160                        l1866 0149                        l1858 011A  
                      l1794 0051                        l1786 0049                        l1778 0043  
                      l1980 0346                        l1972 031E                        l1964 0306  
                      l1956 02E9                        l1948 02D2                        l1892 01B6  
                      l1884 018A                        l1876 016E                        l1868 014F  
                      l1796 0054                        l1788 004C                        l1990 0385  
                      l1982 035F                        l1974 0324                        l1966 0315  
                      l1958 02F8                        l1894 01CF                        l1886 0190  
                      l1878 0178                        l1798 0055                        l1984 0365  
                      l1992 0393                        l1976 033A                        l1896 01D5  
                      l1888 01AA                        l1994 0399                        l1986 037C  
                      l1978 0340                        l1898 01EC                        l1996 039F  
                      l1988 0383                        STR_1 07B0                        STR_2 079E  
                      STR_3 073F                        STR_4 0711                        STR_5 078C  
                      STR_6 0754                        STR_7 077A                        STR_8 0728  
                      STR_9 07D3                        u2000 02FF                        u2001 02FE  
                      u1210 0F08                        u2010 0306                        u1211 0F07  
                      u2011 0305                        u1220 0F53                        u2100 039F  
                      u2020 0315                        u1221 0F52                        u1205 0EFC  
                      u2101 039E                        u2021 0314                        u1310 0F27  
                      u2110 03A6                        u2030 0340                        u1311 0F26  
                      u2111 03A5                        u2031 033F                        u1240 0F65  
                      u1320 0F31                        u1160 07EE                        u1400 04BD  
                      u2120 03AC                        u2040 0346                        u1241 0F64  
                      u1321 0F30                        u1305 0F19                        u1161 07ED  
                      u1401 04BC                        u2121 03AB                        u2041 0345  
                      u1170 07F4                        u1410 0504                        u2130 03BB  
                      u2050 035F                        u1235 0F57                        u1171 07F3  
                      u1411 0503                        u2131 03BA                        u2051 035E  
                      u1260 0F76                        u1340 0F44                        u1180 0EEE  
                      u1500 0581                        u1420 0515                        u2140 03C2  
                      u2060 0365                        u1261 0F75                        u1341 0F43  
                      u1325 0F2D                        u1181 0EED                        u1501 0580  
                      u1421 0514                        u2141 03C1                        u2061 0364  
                      u1510 0595                        u1430 0531                        u1350 0402  
                      u2150 03C9                        u2070 037C                        u1255 0F66  
                      u1335 0F38                        u1511 0594                        u1431 0530  
                      u1351 0401                        u2151 03C8                        u2071 037B  
                      u1280 0F8A                        u1520 059C                        u1440 053C  
                      u1360 0435                        u2160 03D8                        u2080 0383  
                      u1281 0F89                        u1265 0F72                        u1521 059B  
                      u1441 053B                        u1361 0434                        u2161 03D7  
                      u2081 0382                        u1290 0F15                        u1530 05B0  
                      u1450 0542                        u1370 0475                        u2090 0399  
                      u1610 0077                        u1275 0F7E                        u1291 0F14  
                      u1195 0EF5                        u1531 05AF                        u1451 0541  
                      u1435 052D                        u1371 0474                        u2091 0398  
                      u1611 0076                        u1540 05B6                        u1460 0548  
                      u1380 047F                        u1700 014F                        u1620 0094  
                      u1541 05B5                        u1461 0547                        u1381 047E  
                      u1701 014E                        u2317 00E5                        u1621 0093  
                      u1550 0604                        u1470 0559                        u1390 049F  
                      u1710 0155                        u1630 00B2                        u1551 0603  
                      u1471 0558                        u1391 049E                        u2407 02B0  
                      u1711 0154                        u2327 0122                        u1631 00B1  
                      u1560 0618                        u1480 056D                        u1800 01F3  
                      u1720 015A                        u1640 00C5                        u1561 0617  
                      u1481 056C                        u2417 02CC                        u1801 01F2  
                      u1721 0159                        u2337 0143                        u1641 00C4  
                      u1490 0573                        u1810 0209                        u1730 0160  
                      u1650 00D7                        u2507 0FD2                        u1491 0572  
                      u1475 0555                        u2427 034E                        u1811 0208  
                      u2347 0168                        u1731 015F                        u1651 00D6  
                      u1900 0285                        u1820 020F                        u1740 017F  
                      u1660 0114                        u2517 0FE1                        u2437 0371  
                      u1901 0284                        u1821 020E                        u2357 01BE  
                      u1741 017E                        u1661 0113                        u1910 029E  
                      u1830 0214                        u1750 01B0                        u1670 011A  
                      u2527 0FEF                        u2447 038D                        u1911 029D  
                      u1831 0213                        u2367 01E1                        u1751 01AF  
                      u1671 0119                        u1920 02A4                        u1840 021A  
                      u1760 01B6                        u1680 0133                        u2537 0FFC  
                      u2457 0EA4                        u1921 02A3                        u1841 0219  
                      u2377 01FD                        u1761 01B5                        u1681 0132  
                      u1930 02BB                        u1850 0229                        u1770 01CF  
                      u1690 0139                        u2547 0E92                        u2467 0F99  
                      u1931 02BA                        u2387 0233                        u1851 0228  
                      u1771 01CE                        u1691 0138                        u1940 02C2  
                      u1860 023E                        u1780 01D5                        u2477 0FA9  
                      u1941 02C1                        u2397 028D                        u1861 023D  
                      u1781 01D4                        u1950 02D8                        u1870 0245  
                      u1790 01EC                        u2487 0FB8                        u1951 02D7  
                      u1871 0244                        u1791 01EB                        u1960 02DE  
                      u1880 0254                        u2497 0FC5                        u1961 02DD  
                      u1881 0253                        u1970 02E3                        u1890 027F  
                      u1971 02E2                        u1891 027E                        u1980 02E9  
                      u1981 02E8                        u1990 02F8                        u1991 02F7  
                      _TMR1 000E                        _flag 004E                        _cont 007C  
                      _main 002B                        _hora 0060                        _temp 0050  
                      btemp 007E                        start 000C                       ?_main 0070  
                     STR_10 0767                       STR_11 07C2                       STR_12 0767  
                     _ANSEL 0188             __end_of___lwdiv 0F8F                       i1l162 06E0  
                     i1l170 06FA                       i1l331 0ECD                       i1l333 0EE5  
                     i1l167 06EC             __end_of___lwmod 0F49     __size_of_envia_lcd_dado 0012  
                     _PORTB 0006                       _PORTD 0008                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
           __end_of_dpowers 0711             __end_of_isdigit 07F8                       _nivel 0048  
                     _putch 0E80                       pclath 000A            __end_ofi1___wmul 0EE6  
                     status 0003         i1___wmul@multiplier 0070                       wtemp0 007E  
           __initialization 000F                __end_of_main 03F4            Interrupt@voltage 007A  
                    ??_main 0043                      _ADRESH 001E                      _ADRESL 009E  
                    ?_putch 0070                      _ANSELH 0189                      i1l2030 0628  
                    i1l2040 063F                      i1l2032 062E                      i1l2042 0646  
                    i1l2034 0630                      i1l2050 0657                      i1l2026 0619  
                    i1l2060 0691                      i1l2052 065D                      i1l2044 0648  
                    i1l2036 0637                      i1l2028 061F                      i1l2070 06B2  
                    i1l2062 0696                      i1l2054 0663                      i1l2046 064E  
                    i1l2038 0639                      i1l2080 06DB                      i1l2072 06C4  
                    i1l2064 06A0                      i1l2056 067D                      i1l2048 0655  
                    i1l2090 06F4                      i1l2082 06E1                      i1l2074 06C5  
                    i1l2066 06AA                      i1l2058 0687                      i1l2092 06F5  
                    i1l2084 06E3                      i1l2076 06C8                      i1l2068 06AC  
                    i1l2094 06F6                      i1l2086 06E7                      i1l2078 06DA  
                    i1l2088 06F0                      i1l1750 0EC7                      i1l1752 0ED4  
                    i1l1754 0EDB                      i1l1746 0EC1                      i1l1756 0EE1  
                    i1l1748 0EC3                      u220_20 0646                      u220_21 0645  
                    u221_20 0655                      u221_21 0654                      u230_20 06F0  
                    u222_20 0687                      u230_21 06EF                      u222_21 0686  
                    u222_25 0683                      u223_20 0691                      u223_21 0690  
                    u223_25 068D                      u160_20 0EE1                      u224_20 06A0  
                    u160_21 0EE0                      u224_21 069F                      u224_25 069C  
                    u225_20 06AA                      u217_20 061F                      u225_21 06A9  
                    u217_21 061E                      u225_25 06A6                      u226_20 06B2  
                    u218_20 0628                      u226_21 06B1                      u218_21 0627  
                    u227_20 06C4                      u219_20 0637                      u227_21 06C3  
                    u219_21 0636                      u227_25 06C0                      u228_20 06DA  
                    u228_21 06D9                      u228_25 06D6                      u157_20 0EC7  
                    u229_20 06E7                      u157_21 0EC6                      u229_21 06E6  
                    u158_25 0ECE                      u159_25 0ED5          __size_of_Interrupt 00E8  
                    ___wmul 0EE6                   ??___lwdiv 0024                   ??___lwmod 002C  
                    _printf 03F4                   ??_isdigit 0020                      saved_w 007E  
                    putch@p 0022     __end_of__initialization 0027              __pcstackCOMMON 0070  
              __pidataBANK0 07F8               __end_of_putch 0E8A                   ?i1___wmul 0070  
            _envia_lcd_dado 0E9C              _OPTION_REGbits 0081           __end_of_Interrupt 0701  
                   ??_putch 0022                  __pbssBANK0 0046                  _check_time 004C  
         _envia_lcd_comando 0E8A          ?_envia_lcd_comando 0070                  __pmaintext 002B  
                   ?___wmul 0020         ??_envia_lcd_comando 0020                  __pintentry 0004  
    __end_of_envia_lcd_dado 0EAE                     ?_printf 002E                  ??i1___wmul 0074  
 __end_of_envia_lcd_comando 0E9C                  __stringtab 0701                  _inicia_lcd 0F8F  
           __size_of___wmul 0027                     ___lwdiv 0F49                     ___lwmod 0F0D  
                _hora_start 005E             ?_envia_lcd_dado 0070                   _ANSELbits 0188  
                   __ptext1 03F4                     __ptext2 0E80                     __ptext3 0E9C  
                   __ptext4 07E4                     __ptext5 0EE6                     __ptext6 0F0D  
                   __ptext7 0F49                     __ptext8 0F8F                     __ptext9 0E8A  
                   _ajustar 0046             __size_of_printf 0225                   _T1CONbits 0010  
                   _dpowers 0707                     _isdigit 07E4                     clrloop0 0E79  
      end_of_initialization 0027                     printf@c 0042                     printf@f 0041  
     i1___wmul@multiplicand 0072                   _PORTAbits 0005                   _PORTCbits 0007  
__size_of_envia_lcd_comando 0012                 printf@width 003F                 ?_inicia_lcd 0070  
            __end_of___wmul 0F0D              __end_of_printf 0619         start_initialization 000F  
         __size_ofi1___wmul 0025                   _Interrupt 0619                    ??___wmul 0024  
                init_fetch0 0EAE                 __pdataBANK0 005A                    ??_printf 0034  
               __pbssCOMMON 007C                   ___latbits 0002               __pcstackBANK0 0020  
       __size_of_inicia_lcd 0071                  ?_Interrupt 0070            ___lwdiv@dividend 0022  
          ??_envia_lcd_dado 0020                    ?___lwdiv 0020                    ?___lwmod 0028  
                 _aquecedor 004A                   __pstrings 0701                    ?_isdigit 0070  
          ___lwdiv@quotient 0025                   _hora_stop 005C              __size_of_putch 000A  
                 _min_start 0054           interrupt_function 0004              ___wmul@product 0024  
                 clear_ram0 0E78                    _PIE1bits 008C                    _PIR1bits 000C  
       envia_lcd_dado@valor 0021                  _ADCON0bits 001F                 __stringbase 0706  
                _ADCON1bits 009F           ___wmul@multiplier 0020                    i1___wmul 0EC1  
                printf@flag 003E                  printf@prec 0038                 ??_Interrupt 0076  
              ??_inicia_lcd 0022         envia_lcd_comando@RS 0021            __size_of___lwdiv 0046  
          __size_of___lwmod 003C          __end_of__stringtab 0707                 _isdigit$901 0020  
          __size_of_isdigit 0014             ___lwdiv@divisor 0020             ___lwdiv@counter 0027  
                  __ptext10 0619                    __ptext11 0EC1          __end_of_inicia_lcd 1000  
                  _max_temp 005A               __size_of_main 03C9                    _min_stop 0052  
                 printf@len 003A                   printf@val 003C                  _INTCONbits 000B  
                  init_ram0 0EB2                    isdigit@c 0021                    intlevel1 0000  
          ___lwmod@dividend 002A                   stringcode 0701                    printf@ap 0039  
                  printf@cp 0037             ___lwmod@divisor 0028             ___lwmod@counter 002D  
                  stringdir 0701                    stringtab 0701  
